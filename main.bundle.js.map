{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://mariosequencer/webpack/runtime/create fake namespace object","webpack://mariosequencer/webpack/runtime/load script","webpack://mariosequencer/./public/image/ sync \\.png$","webpack://mariosequencer/./public/wav/ sync \\.wav$","webpack://mariosequencer/webpack/bootstrap","webpack://mariosequencer/webpack/runtime/define property getters","webpack://mariosequencer/webpack/runtime/ensure chunk","webpack://mariosequencer/webpack/runtime/get javascript chunk filename","webpack://mariosequencer/webpack/runtime/get mini-css chunk filename","webpack://mariosequencer/webpack/runtime/hasOwnProperty shorthand","webpack://mariosequencer/webpack/runtime/make namespace object","webpack://mariosequencer/webpack/runtime/publicPath","webpack://mariosequencer/webpack/runtime/jsonp chunk loading","webpack://mariosequencer/./src/app.types.ts","webpack://mariosequencer/./src/sound.ts","webpack://mariosequencer/./src/timer.ts","webpack://mariosequencer/./src/mario.ts","webpack://mariosequencer/./src/songs.ts","webpack://mariosequencer/./src/eventHandling.ts","webpack://mariosequencer/./src/utils.ts","webpack://mariosequencer/./src/app.module.scss?fc02","webpack://mariosequencer/./src/ui.ts","webpack://mariosequencer/./src/mp3export.ts","webpack://mariosequencer/./src/recorder.ts","webpack://mariosequencer/./src/app.ts"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"mariosequencer:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var map = {\n\t\"./G_Clef.png\": 2578,\n\t\"./Mario.png\": 9410,\n\t\"./about.png\": 3236,\n\t\"./beat_button.png\": 7997,\n\t\"./bomb.png\": 7712,\n\t\"./character_sheet.png\": 7246,\n\t\"./clear_button.png\": 9179,\n\t\"./end_mark.png\": 3295,\n\t\"./mario_sweat.png\": 6206,\n\t\"./mat.png\": 9113,\n\t\"./numbers.png\": 3944,\n\t\"./play_button.png\": 9890,\n\t\"./repeat_head.png\": 2788,\n\t\"./semitone.png\": 6244,\n\t\"./share.png\": 540,\n\t\"./slider_thumb.png\": 9513,\n\t\"./song_buttons.png\": 1719,\n\t\"./stop_button.png\": 8032,\n\t\"./undo_dog.png\": 3443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7502;","var map = {\n\t\"./sound01.wav\": 5372,\n\t\"./sound02.wav\": 2604,\n\t\"./sound03.wav\": 9387,\n\t\"./sound04.wav\": 8111,\n\t\"./sound05.wav\": 7193,\n\t\"./sound06.wav\": 3617,\n\t\"./sound07.wav\": 5684,\n\t\"./sound08.wav\": 9758,\n\t\"./sound09.wav\": 5980,\n\t\"./sound10.wav\": 4730,\n\t\"./sound11.wav\": 3311,\n\t\"./sound12.wav\": 726,\n\t\"./sound13.wav\": 6833,\n\t\"./sound14.wav\": 8784,\n\t\"./sound15.wav\": 1329,\n\t\"./sound16.wav\": 9512,\n\t\"./sound17.wav\": 5640,\n\t\"./sound18.wav\": 9493,\n\t\"./sound19.wav\": 75,\n\t\"./sound20.wav\": 4451,\n\t\"./sound21.wav\": 651,\n\t\"./sound22.wav\": 8899,\n\t\"./sound23.wav\": 3682,\n\t\"./sound24.wav\": 9399,\n\t\"./sound25.wav\": 5292,\n\t\"./sound26.wav\": 4323,\n\t\"./sound27.wav\": 549,\n\t\"./sound28.wav\": 3178,\n\t\"./sound29.wav\": 4813\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7518;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmariosequencer\"] = self[\"webpackChunkmariosequencer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { SoundEntity } from \"./sound\";\r\n\r\ntype AppEventMap = DocumentEventMap & {\r\n    \"mp3update\": Mp3UpdateEvent;\r\n}\r\n\r\nexport interface App extends Omit<HTMLElement, \"addEventListener\"> {\r\n    addEventListener: <K extends keyof AppEventMap>(type: K, listener: (ev: AppEventMap[K]) => any, useCapture?: boolean) => any;\r\n}\r\n\r\nexport interface AppButton extends Omit<HTMLButtonElement, \"addEventListener\"> {\r\n    currentFrame: HTMLImageElement;\r\n    images: HTMLImageElement[];\r\n    num: number;\r\n    originalX: number;\r\n    originalY: number;\r\n    originalW: number;\r\n    originalH: number;\r\n    addEventListener: <K extends keyof DocumentEventMap>(type: K, listener: (ev: SequencerBtnEvent) => any, useCapture?: boolean) => any;\r\n    setCurrentFrame: (num: number) => void;\r\n    redraw: () => void;\r\n}\r\n\r\nexport interface ToggleButton extends AppButton {\r\n    reset: () => void;\r\n    set: () => void;\r\n}\r\n\r\nexport interface InstrumentButton extends AppButton {\r\n    se: SoundEntity;\r\n    soundImage: HTMLImageElement;\r\n}\r\n\r\nexport interface BeatButton extends AppButton {\r\n    beats: number;\r\n}\r\n\r\nexport type SequencerButton = AppButton | ToggleButton | InstrumentButton | BeatButton;\r\n\r\nexport interface ISequencerBtnCreationArgs<T extends AppButton> {\r\n    x: number, y: number, w: number, h: number, id: string, images: HTMLImageElement[], clickHandler?: (this: T, ev: SequencerBtnEvent) => any, className?: string\r\n}\r\n\r\nexport interface SequencerBtnEvent extends MouseEvent {\r\n    soundOff?: boolean;\r\n}\r\n\r\nexport interface SequencerSlider extends HTMLInputElement {\r\n    image?: HTMLImageElement; \r\n    originalX: number;\r\n    originalY: number;\r\n    originalW: number;\r\n    originalH: number;\r\n    redraw: () => void;\r\n}\r\n\r\nexport interface IMarioSequencerProps {\r\n    SEMITONERATIO: number;\r\n    MAGNIFY: number;\r\n    CHARSIZE: number;\r\n    HALFCHARSIZE: number;\r\n    ORGWIDTH: number;\r\n    ORGHEIGHT: number;\r\n    SCRHEIGHT: number;\r\n    DEFAULTMAXBARS: number;\r\n    DEFAULTTEMPO: number;\r\n    OFFSETLEFT: number;\r\n    OFFSETTOP: number;\r\n}\r\n\r\nexport interface IMarioSequencerAssets {\r\n    BUTTONS: AppButton[];\r\n    SOUNDS: SoundEntity[];\r\n    /** Stores loaded spritesheets (unscaled) */\r\n    SPRITESHEETS?: {\r\n        Chars: HTMLImageElement;\r\n        Bomb: HTMLImageElement;\r\n        End: HTMLImageElement;\r\n        PlayBtn: HTMLImageElement;\r\n        Repeat: HTMLImageElement;\r\n        Semitone: HTMLImageElement;\r\n        Numbers: HTMLImageElement;\r\n        Stop: HTMLImageElement;\r\n        Beat: HTMLImageElement;\r\n        Song: HTMLImageElement;\r\n        ThumbSlider: HTMLImageElement;\r\n        ClearBtn: HTMLImageElement;\r\n        Mario: HTMLImageElement;\r\n        UndoDog: HTMLImageElement;\r\n    },\r\n    /** Stores scaled sprite frames */\r\n    IMAGES?: {\r\n        Tools: HTMLImageElement[];\r\n        Bomb: HTMLImageElement[];\r\n        GClef: HTMLImageElement;\r\n        Numbers: HTMLImageElement[];\r\n        Mario: HTMLImageElement[];\r\n        Sweat: HTMLImageElement;\r\n        PlayBtn: HTMLImageElement[];\r\n        StopBtn: HTMLImageElement[];\r\n        ClearBtn: HTMLImageElement[];\r\n        ThumbSlider: HTMLImageElement[];\r\n        BeatBtn: HTMLImageElement[];\r\n        SongBtns: HTMLImageElement[];\r\n        EndMarkBtn: HTMLImageElement[];\r\n        EndMark: HTMLImageElement;\r\n        Semitone: HTMLImageElement[];\r\n        Repeat: HTMLImageElement[];\r\n        UndoDog: HTMLImageElement[];\r\n    },\r\n}\r\n\r\nexport enum GameStatus {\r\n    Edit = 0,\r\n    MarioEntering = 1,\r\n    Playing = 2,\r\n    MarioLeaving = 3\r\n}\r\n\r\nexport type MarioSequencerSong = {\r\n    notes: (string|number)[][];\r\n    beats: number;\r\n    loop: boolean;\r\n    end: number;\r\n    tempo: string | number;\r\n}\r\n\r\nexport type MarioSequencerSongCollection = {\r\n    [index: number]: MarioSequencerSong;\r\n}\r\n\r\nexport type MarioSequencerAppState = {\r\n    mouseX: number;\r\n    mouseY: number;\r\n    keyPresses: string[];\r\n\r\n    /** Last ID returned from requestAnimationFrame, can be used to cancel draw callbacks */\r\n    animeId: number;\r\n\r\n    /** Used to prevent animation during resize and redraw of canvas */\r\n    resizing: boolean;\r\n\r\n    /** Stores the Mario Paint composer tool currently selected (index / number) */\r\n    currentTool: number;\r\n\r\n    /** Stores the app's progress/position in relation to the musical score. Used in playback and in rendering the score to the screen. */\r\n    curPos: number;\r\n\r\n    /** When the user loads one of the embedded Mario Paint songs, this is a reference to the associated button in the UI */\r\n    selectedSongBtn?: ToggleButton;\r\n\r\n    /** Stores the current music score state */\r\n    curScore: MarioSequencerSong;\r\n\r\n    /** Stores the music score history - needed for undoDog */\r\n    history: MarioSequencerAppState[];\r\n\r\n    gameStatus: GameStatus;\r\n}\r\n\r\nexport type InstrumentChordRecord = Record<number, number[]>;\r\n\r\ninterface IMp3WorkerUpdateMessage extends Event {\r\n    data : {\r\n        type: \"chordGenUpdate\" | \"songProgressUpdate\";\r\n        value: number;\r\n    }\r\n}\r\n\r\ninterface IMp3WorkerSongMessage extends Event {\r\n    data: {\r\n        type: \"song\";\r\n        value: string;\r\n    }\r\n}\r\n\r\nexport type Mp3UpdateEvent = IMp3WorkerUpdateMessage | IMp3WorkerSongMessage;","import { MarioSequencer } from \"./app\";\r\nimport { IMarioSequencerProps } from \"./app.types\";\r\n\r\ninterface ISoundEntity {\r\n    play(scale: number, delay: number): void;\r\n    playChord(noteList: number[], delay: number): void;\r\n    load(): void;\r\n}\r\n\r\nexport class SoundEntity implements ISoundEntity {\r\n    private AC: AudioContext;\r\n    private app: MarioSequencer;\r\n    private path: string;\r\n    public buffer: AudioBuffer | null;\r\n    private prevChord: any[];\r\n    private diff: number[];\r\n    private settings: IMarioSequencerProps;\r\n    public image: HTMLImageElement | null = null;\r\n    \r\n    constructor(app: MarioSequencer, settings: IMarioSequencerProps, path: string) {\r\n        this.app = app;\r\n        this.AC = app.AC;\r\n        this.path = path;\r\n        this.buffer = null;\r\n        this.prevChord = [];\r\n        this.diff = [14, 12, 11, 9, 7, 6, 4, 2, 0, -1, -3, -5, -6];\r\n        this.settings = settings;\r\n    }\r\n\r\n    /**\r\n     * Plays a note at a given playback rate\r\n     * @param scale Determines the note that will be played\r\n     * @param delay Delay before note is played\r\n     */\r\n    public play(scale: number, delay?: number) {\r\n        var source = this.AC.createBufferSource();\r\n        var tmps = scale & 0x0F;\r\n        var semitone = this.diff[tmps];\r\n        if ((scale & 0x80) != 0) semitone++;\r\n        else if ((scale & 0x40) != 0) semitone--;\r\n        if (delay == undefined) delay = 0;\r\n        source.buffer = this.buffer;\r\n        source.playbackRate.value = Math.pow(this.settings.SEMITONERATIO, semitone);\r\n        source.connect(this.AC.destination);\r\n        if (this.app.MSDestination) source.connect(this.app.MSDestination);\r\n        source.start(delay);\r\n    }\r\n\r\n    /**\r\n     * Play a chord\r\n     * In fact, can be a single note.\r\n     * Purpose is to cancel the sounds in previous bar\r\n     * if the kind of note is the same.\r\n     * Even the chord will be canceled (stoped) playing\r\n     * SNES has channels limit, so that succesive notes\r\n     * cancels previous note when next note comes.\r\n     * Long note like Yoshi can be canceled often\r\n     * BufferSource.stop won't throw an error even if the\r\n     * previous note has already ended.\r\n     * @param noteList \r\n     * @param delay \r\n     */\r\n    public playChord(noteList: number[], delay?: number) {\r\n        // Cancel previous chord first\r\n        for (var i = 0; i < this.prevChord.length; i++) {\r\n            this.prevChord[i].stop();\r\n        }\r\n        this.prevChord = [];\r\n        if (delay == undefined) delay = 0;\r\n        // I heard that Array#map is slower than for loop because of costs of calling methods.\r\n        for (var i = 0; i < noteList.length; i++) {\r\n            var source = this.AC.createBufferSource();\r\n            var scale = (noteList[i] & 0x0F);\r\n            var semitone = this.diff[scale];\r\n            if ((noteList[i] & 0x80) != 0) semitone++;\r\n            else if ((noteList[i] & 0x40) != 0) semitone--;\r\n            source.buffer = this.buffer;\r\n            source.playbackRate.value = Math.pow(this.settings.SEMITONERATIO, semitone);\r\n        \r\n            // Compressor: Suppress harsh distortions\r\n            //var compressor = AC.createDynamicsCompressor();\r\n            //source.connect(compressor);\r\n            //compressor.connect(AC.destination);\r\n            source.connect(this.AC.destination);\r\n            if (this.app.MSDestination) source.connect(this.app.MSDestination);\r\n            source.start(delay);\r\n            this.prevChord.push(source);\r\n        }\r\n    }\r\n\r\n    public load() {\r\n        var filepath = this.path;\r\n        return new Promise<AudioBuffer>((resolve, reject) => {\r\n            // Load buffer asynchronously\r\n            var request = new XMLHttpRequest();\r\n            request.open(\"GET\", filepath, true);\r\n            request.responseType = \"arraybuffer\";\r\n        \r\n            request.onload = () => {\r\n                // Asynchronously decode the audio file data in request.response\r\n                this.AC.decodeAudioData(\r\n                    request.response,\r\n                    function(buffer) {\r\n                        if (!buffer) {\r\n                        reject('error decoding file data: ' + filepath);\r\n                        }\r\n                        resolve(buffer);\r\n                    },\r\n                    function(error) {\r\n                        reject('decodeAudioData error:' + error);\r\n                    }\r\n                );\r\n            };\r\n        \r\n            request.onerror = function() {\r\n                reject('BufferLoader: XHR error');\r\n            };\r\n        \r\n            request.send();\r\n        });\r\n    }\r\n}\r\n\r\nexport class SoundManager {\r\n    private _sequencer: MarioSequencer;\r\n    constructor(sequencer: MarioSequencer) {\r\n        this._sequencer = sequencer;\r\n    }\r\n\r\n    public async loadSounds() {\r\n        const s = this._sequencer;\r\n        const SOUNDS = s.ASSETS.SOUNDS;\r\n        for (let i = 1; i < 21; i++) {\r\n            let tmp = '0';\r\n            tmp += i.toString();\r\n            const file = \"wav/sound\" + tmp.slice(-2) + \".wav\";\r\n            const e = new SoundEntity(this._sequencer, s.CONST, file);\r\n            SOUNDS[i-1] = e;\r\n        }\r\n        await Promise.all(s.ASSETS.SOUNDS.map((s) => s.load())).then((all) => {\r\n            all.map((buffer, i) => {\r\n                s.ASSETS.SOUNDS[i].buffer = buffer;\r\n            });\r\n        });\r\n    }\r\n}","export type EasyTimerFn = (this: EasyTimer) => void;\r\n\r\n/** Timer class that can be used to trigger animations and other effects at a set frequency during \r\n * an animation loop (such as those using requestAnimationFrame) \r\n */\r\nexport class EasyTimer {\r\n    private _frequency: number;\r\n    private _func: EasyTimerFn;\r\n    private _lastTime = 0;\r\n    \r\n    /** Determines whether the timer should execute it's function during animation loop.\r\n     * When set to false, the timer will not execute. \r\n     */\r\n    public switch = false;\r\n    \r\n    /** A reference to the current frame of animation */\r\n    public currentFrame: number = 0;\r\n\r\n    /** A reference to sprite sheet images to be used for this timer */\r\n    public images: HTMLImageElement[] = [];\r\n\r\n    /**\r\n     * Timer class that can be used to trigger animations and other effects at a set frequency during \r\n     * an animation loop (such as those using requestAnimationFrame)\r\n     * @param frequency The frequency at which to fire the timer function (ms)\r\n     * @param func The function that should be fired on a set frequency\r\n     * @param images Spritesheet image array that can be accessed in the timer function\r\n     */\r\n    constructor(frequency: number, func: EasyTimerFn, images?: HTMLImageElement[]) {\r\n        this._frequency = frequency;\r\n        this._func = func;\r\n        if (images) {\r\n            this.images = images;\r\n        }\r\n    }\r\n\r\n    /** Utility function that can be used by animation loops to cause the timer function to fire.\r\n     * When passed a delta time, if enough time has passed (as set by the frequency param in constructor)\r\n     * the function will fire.\r\n     */\r\n    public checkAndFire(time: number) {\r\n        if (this.switch && time - this._lastTime > this._frequency) {\r\n            this._func();\r\n            this._lastTime = time;\r\n        }\r\n    }\r\n}\r\n\r\nexport default EasyTimer;","import { MarioSequencer } from \"./app\";\r\nimport EasyTimer from \"./timer\";\r\n\r\nexport class Mario {\r\n    private offset = -16;\r\n    public scroll = 0;\r\n    public x: number = -16;\r\n    private sweatImage: HTMLImageElement | null = null;\r\n    private spriteImages: HTMLImageElement[] | null = null;\r\n    public pos = 0;\r\n    private start = 0;\r\n    private state = 0;\r\n    private timer?: EasyTimer;\r\n    private mario?: Mario;\r\n    private switch = true; // forever true\r\n    private isJumping = false;\r\n    private lastTime: number = 0;\r\n    private sequencer: MarioSequencer;\r\n\r\n    constructor(sequencerInstance: MarioSequencer) {\r\n        this.sequencer = sequencerInstance;\r\n        if (sequencerInstance.ASSETS.IMAGES) {\r\n            this.spriteImages = sequencerInstance.ASSETS.IMAGES.Mario;\r\n            this.sweatImage = sequencerInstance.ASSETS.IMAGES.Sweat;\r\n        }\r\n        this.init();\r\n    }\r\n\r\n    public init() {\r\n        this.x = -16;\r\n        this.pos = 0;\r\n        this.start = 0;\r\n        this.state = 0;\r\n        this.scroll = 0;\r\n        this.offset = -16;\r\n        const mario = this.mario = this;\r\n        this.timer = new EasyTimer(100, function() {\r\n            mario.state = (mario.state == 1) ? 0 : 1;\r\n        });\r\n        this.timer.switch = true; // forever true;\r\n        this.isJumping = false;\r\n    }\r\n\r\n    public enter(timeStamp: number) {\r\n        if (this.start == 0) this.start = timeStamp;\r\n\r\n        const diff = timeStamp - this.start;\r\n        this.x = Math.floor(diff / 5) + this.offset;\r\n        if (this.x >= 40) this.x = 40; // 16 + 32 - 8\r\n        if (Math.floor(diff / 100) % 2 == 0) {\r\n            this.state = 1;\r\n        } else {\r\n            this.state = 0;\r\n        }\r\n        this.draw();\r\n    }\r\n\r\n    public init4leaving() {\r\n        this.offset = this.x;\r\n        this.start = 0;\r\n        this.isJumping = false;\r\n    }\r\n\r\n    public init4playing(timeStamp: number) {\r\n        this.lastTime = timeStamp;\r\n        this.offset = this.x;\r\n        this.scroll = 0;\r\n        this.pos = 1;\r\n        this.state == 1;\r\n        this._checkMarioShouldJump();\r\n    }\r\n\r\n    private _checkMarioShouldJump() {\r\n        const notes = this.sequencer.appState.curScore.notes[this.pos - 1];\r\n        if (notes == undefined || notes.length == 0) {\r\n            this.isJumping = false;\r\n        } else if (notes.length == 1) {\r\n            this.isJumping = (typeof notes[0] != 'string');\r\n        } else\r\n            this.isJumping = true;\r\n    }\r\n\r\n    public play(timeStamp: number) {\r\n        const { sequencer } = this;\r\n        const tempo = sequencer.appState.curScore.tempo\r\n        if (this.mario) {\r\n            let diff = timeStamp - this.lastTime; // both are [ms]\r\n            if (diff > 32) diff = 16; // When user hide the tag, force it\r\n            this.lastTime = timeStamp;\r\n            const step = 32 * diff * (tempo as number) / 60000; // (60[sec] * 1000)[msec]\r\n    \r\n            this.timer?.checkAndFire(timeStamp);\r\n            const scroll = document.getElementById('scroll') as HTMLInputElement;\r\n    \r\n            var nextBar = (16 + 32 * (this.pos - sequencer.appState.curPos + 1) - 8);\r\n            if (this.mario.x < 120) { // Mario still has to run\r\n                this.x += step;\r\n                // If this step crosses the bar\r\n                if (this.x >= nextBar) {\r\n                    this.pos++;\r\n                    sequencer.scheduleAndPlay(sequencer.appState.curScore.notes[this.pos - 2], 0); // Ignore diff\r\n                    this._checkMarioShouldJump();\r\n                } else {\r\n                    // 32 dots in t[sec/1beat]\r\n                    if (this.x >= 120) {\r\n                        this.scroll = this.x - 120;\r\n                        this.x = 120;\r\n                    }\r\n                }\r\n            } else if (sequencer.appState.curPos <= sequencer.appState.curScore.end - 6) { // Scroll\r\n                this.x = 120;\r\n                if (this.scroll < 16 && (this.scroll + step) > 16) {\r\n                    this.pos++;\r\n                    this.scroll += step;\r\n                    sequencer.scheduleAndPlay(sequencer.appState.curScore.notes[this.pos - 2], 0); // Ignore error\r\n                    this._checkMarioShouldJump();\r\n                } else {\r\n                    this.scroll += step;\r\n                    if (this.scroll > 32) {\r\n                        this.scroll -= 32;\r\n                        sequencer.appState.curPos++;\r\n                        if (scroll) scroll.value = sequencer.appState.curPos.toString();\r\n                        if (sequencer.appState.curPos > (sequencer.appState.curScore.end - 6)) {\r\n                        this.x += this.scroll;\r\n                        this.scroll = 0\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.x += step;\r\n                // If this step crosses the bar\r\n                if (this.x >= nextBar) {\r\n                this.pos++;\r\n                sequencer.scheduleAndPlay(sequencer.appState.curScore.notes[this.pos - 2], 0); // Ignore diff\r\n                this._checkMarioShouldJump();\r\n                }\r\n            }\r\n            sequencer.drawScore(sequencer.appState.curPos, sequencer.appState.curScore.notes, this.scroll);\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    private _jump(x: number) {\r\n        var h = [0, 2, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 18, 19, 19, 19,\r\n            19, 19, 18, 18, 17, 16, 15, 14, 13, 12, 10, 8, 6, 4, 2, 0];\r\n        return h[Math.round(x) % 32];\r\n    }\r\n\r\n    public draw() {\r\n        if (this.spriteImages) {\r\n            let y = (41 - 22);\r\n            let state = this.state\r\n            if (this.isJumping) {\r\n                state = 2;\r\n                if (this.x == 120) { // In scroll mode\r\n                // (scroll == 16) is just on the bar, 0 and 32 is on the center of between bars\r\n                if (this.scroll != 16) {\r\n                    y -= this._jump(this.scroll > 16 ? this.scroll - 16 : this.scroll + 16);\r\n                } /* if scroll == 16 then Mario should be on the ground */\r\n                } else { // Running to the center, or leaving to the goal\r\n                y -= this._jump(Math.round((this.x - 8) % 32));\r\n                }\r\n            }\r\n    \r\n            this.sequencer.drawMario(this.spriteImages[state], this.x, y);\r\n        }\r\n    }\r\n\r\n    public leave(timeStamp: number) {\r\n        if (this.sweatImage) {\r\n            if (this.start == 0) this.start = timeStamp;\r\n    \r\n            const diff = timeStamp - this.start;\r\n            if (this.scroll > 0 && this.scroll < 32) {\r\n                this.scroll += Math.floor(diff / 4);\r\n                if (this.scroll > 32) {\r\n                    this.x += this.scroll - 32;\r\n                    this.scroll = 0;\r\n                    this.sequencer.appState.curPos++;\r\n                }\r\n            } else\r\n                this.x = Math.floor(diff / 4) + this.offset;\r\n            if (Math.floor(diff / 100) % 2 == 0) {\r\n                this.state =  8;\r\n                this.draw();\r\n                const w = this.sweatImage.width;\r\n                const h = this.sweatImage.height;\r\n    \r\n                this.sequencer.drawMarioSweat(\r\n                    this.sweatImage,\r\n                    0, 0, w, h,\r\n                    (this.x - (w + 1)), \r\n                    (41 - 22),\r\n                    w, h\r\n                );\r\n                \r\n            } else {\r\n                this.state = 9;\r\n                this.draw();\r\n            }\r\n        }\r\n    }\r\n}","import { MarioSequencerSongCollection } from \"./app.types\";\r\n\r\nconst EmbeddedSongs: MarioSequencerSongCollection = [];\r\nEmbeddedSongs[0] = {\"notes\":[[1026,2313],[1026,2313],[],[1026,2313],\r\n  [],[1028,2315],[1026,2313],[],[1024,2311],[],[],[],[517,3591,265],\r\n  [],[],[],[2818,2820,267],[],[3072,3595],[3072,2818,3595],\r\n  [2817,2820,267],[],[3072,3592],[3072,2817,3591],[2816,2819,267],[],\r\n  [3072,3591],[2816,1287,3595],[2817,1286,1288],[262,1288,1290],\r\n  [1286,3591,1288],[1285,1287,266],[2,3595,3084],[],[256],[257,3595],\r\n  [4,3593,3084],[],[256],[257,7,3593],[6,3592,3084],[4],[256,3592],\r\n  [257,4,3590],[3084],[256],[],[257,6,3591],[7,3084],[3591],\r\n  [256,4,3592],[257],[4,3593,3084],[],[0,3594],[257],[2,3591],[1031],\r\n  [256,1030],[3,1029,3592],[1028],[1027,262],[1026],[1025,263],\r\n  [1026,266,3595],[7],[2050,4],[7,266,3595],[1028,3593,266],[7],\r\n  [2050,4],[5,1031,3593],[1030,3592,266],[1028,6,2568],[4],\r\n  [1,1028,3590],[264],[2049,2,260],[3,260],[261,1030],[1031,266],\r\n  [3584,2,7],[1028],[1,5,7],[1025,3591],[1026],[1027],[],[1028],\r\n  [258,3588],[],[260,3595],[261,3595],[],[261,267],[],[]],\r\n  \"beats\":4,\"loop\":false,\"end\":96,\"tempo\":\"370\"};\r\n\r\nEmbeddedSongs[1] = {\"notes\":[[772,779],[768],[770,779],[768],[772,775],\r\n  [768],[770,775],[768],[772,774],[769],[772,774],[769],[768,770,775],\r\n  [],[],[],[769,774,776],[772],[769,774,776],[772],[770,775,777],\r\n  [772],[770,775,777],[772],[771,773,778],[775],[771,778],[773],\r\n  [771,777,779],[],[],[],[775,777],[768],[775,777],[768],[776,778],\r\n  [768],[776,778],[768],[777,779],[768],[777,779],[768],[778,780],\r\n  [],[],[],[775],[768,772],[775],[768,772],[776],[768,772],[776],\r\n  [768,772],[777],[768,772],[777],[768,772],[771,773,778],[],[],[],\r\n  [777,779],[779],[777,779],[779],[775,777],[777],[775,777],[777],\r\n  [774,776],[776],[774,776],[776],[768,775,777],[],[],[],[774,776],\r\n  [776],[774,776],[773],[772,777],[775],[772,777],[],[771,775,778],\r\n  [],[771,775,778],[],[772,777,779],[],[],[],[]],\r\n  \"beats\":4,\"loop\":true,\"end\":96,\"tempo\":\"178\"};\r\n\r\nEmbeddedSongs[2] = {\"notes\":[[266,3595],[3072,2,7],[3591,3081],[3072,2,7],\r\n  [2305,3590,266],[2305,2,7],[1,2307,3594],[3078],[266,3595],[3072,2,7],\r\n  [3591,3081],[3072,2,7],[2305,3590,266],[2305,3,7],[1,2307,3594],[],\r\n  [1028,3079,3595],[3072,2,7],[1028,3078,3591],[1026,261,7],[1024,267],\r\n  [],[1543],[],[1281,3594],[1,6],[1281,3590],[1282,6],[1283],[],[1798],\r\n  [],[1027,3079,3594],[3072,1,6],[1027,3590,3082],[1025,261,6],[1030,267],\r\n  [],[2055,2059],[],[1280,1285,3595],[2,7],[1280,1285,3591],[1281,2,1286],\r\n  [1282,1287,266],[2571],[],[],[1287,779],[775],[1287,777],[772,1287],\r\n  [1284,775,264],[2306,3077],[2306,264],[2308,3077],[1286,2826],[2822],\r\n  [1286,2824],[2819,1286],[1284,2822,264],[2305,3077],[2305,264],\r\n  [2307,3077],[1285,3335,264],[3331],[1285,3335],[3329,1285],\r\n  [1283,1029,264],[],[519],[],[2304,1282,1028],[2304,1282,1028],\r\n  [2304,1282,1028],[2305,1283,1029],[2306,1284,1030],[],[2304,1282,1028],\r\n  [],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],\r\n  \"beats\":4,\"loop\":true,\"end\":80,\"tempo\":\"287\"};\r\n\r\n  export default EmbeddedSongs;","import { MarioSequencer } from \"./app\";\r\nimport { GameStatus, SequencerBtnEvent, SequencerButton } from \"./app.types\";\r\n\r\nexport function AddEvents (sequencer: MarioSequencer) {\r\n    sequencer.container.addEventListener(\"playsong\", (e) => {\r\n        const playBtn = document.getElementById(\"play\") as SequencerButton;\r\n        playBtn.style.backgroundImage = \"url(\" + playBtn.images[1].src + \")\";\r\n        playBtn.disabled = true; // Would be unlocked by stop button\r\n        \r\n        const stopBtn = document.getElementById(\"stop\") as SequencerButton;\r\n        stopBtn.style.backgroundImage = \"url(\" + stopBtn.images[0].src + \")\";\r\n        stopBtn.disabled = false;\r\n        \r\n        sequencer.ASSETS.SOUNDS[17].play(8);\r\n\r\n        [\"toLeft\", \"toRight\", \"scroll\", \"clear\", \"frog\", \"beak\", \"1up\"].\r\n            map(function (id) {\r\n                (document.getElementById(id) as HTMLButtonElement).disabled = true;\r\n            });\r\n\r\n        sequencer.appState.gameStatus = GameStatus.MarioEntering; // Mario Entering the stage\r\n        sequencer.appState.curPos = 0;     // doAnimation will draw POS 0 and stop\r\n        sequencer.mario?.init();\r\n        window.requestAnimFrame(sequencer.doMarioEnter);\r\n    });\r\n\r\n    sequencer.container.addEventListener(\"stopsong\", (e) => {\r\n        const stopBtn = document.getElementById(\"stop\") as SequencerButton;\r\n        stopBtn.style.backgroundImage = \"url(\" + stopBtn.images[1].src + \")\";\r\n        stopBtn.disabled = true; // Would be unlocked by play button\r\n\r\n        // Sound ON: click , OFF: called by doMarioPlay\r\n        if (e != undefined) sequencer.ASSETS.SOUNDS[17].play(8);\r\n        const playBtn = document.getElementById(\"play\") as SequencerButton;\r\n        playBtn.style.backgroundImage = \"url(\" + playBtn.images[0].src + \")\";\r\n\r\n        sequencer.appState.gameStatus = GameStatus.MarioLeaving; // Mario leaves from the stage\r\n        sequencer.mario?.init4leaving();\r\n        if (sequencer.appState.animeId != 0) cancelAnimationFrame(sequencer.appState.animeId);\r\n        window.requestAnimFrame(sequencer.doMarioLeave);\r\n    });\r\n}\r\n\r\nexport function EmitClickEvent(b: SequencerButton, soundOff: boolean = false) {\r\n    const e = new Event(\"click\") as SequencerBtnEvent;\r\n    e.soundOff = true;\r\n    b.dispatchEvent(e);\r\n} ","import { MarioSequencer } from \"./app\";\r\nimport { ISequencerBtnCreationArgs, SequencerButton, ToggleButton } from \"./app.types\";\r\nimport { IMarioSequencerProps } from \"./app.types\";\r\n\r\nexport namespace Utils {\r\n\r\n    export function boundFn(sequencer: MarioSequencer, fn: Function) {\r\n        return fn.bind(sequencer);\r\n    }\r\n\r\n    //#region App Constants & Recalculation\r\n\r\n    export function getConstants(this: MarioSequencer, opts: any, container: HTMLElement): IMarioSequencerProps {\r\n        const MAGNIFY = opts.mag || opts.magnify || Utils.getScaledMagnify();\r\n        const CHARSIZE = 16 * MAGNIFY;\r\n        const HALFCHARSIZE = Math.floor(CHARSIZE / 2);\r\n        const ORGHEIGHT = 224;\r\n        const ORGWIDTH = 256;\r\n        container.style.width = ORGWIDTH * MAGNIFY + \"px\";\r\n        container.style.height = ORGHEIGHT * MAGNIFY + \"px\";\r\n        return {\r\n            CHARSIZE,\r\n            DEFAULTMAXBARS: 24 * 4 + 1,\r\n            DEFAULTTEMPO: 100,\r\n            HALFCHARSIZE,\r\n            MAGNIFY,\r\n            ORGHEIGHT,\r\n            ORGWIDTH,\r\n            SCRHEIGHT: 152,\r\n            SEMITONERATIO: Math.pow(2, 1/12),\r\n            OFFSETLEFT: container.offsetLeft,\r\n            OFFSETTOP: container.offsetTop\r\n        }\r\n    }\r\n\r\n    export function getScaledMagnify() {\r\n        const width = Math.floor(window.innerWidth / 256);\r\n        const height = Math.floor((window.innerHeight -84) / 224);\r\n        return Math.min(width, height);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Button helpers \r\n\r\n    export function createButton(this: MarioSequencer, args: ISequencerBtnCreationArgs<SequencerButton>) {\r\n        const { h, id, images, w, x, y, className, clickHandler } = args;\r\n        const b = document.createElement(\"button\") as SequencerButton;\r\n        b.id = id;\r\n        b.className = \"game\";\r\n        b.style.position = 'absolute';\r\n        this.moveDOM(b, x, y);\r\n        this.resizeDOM(b, w, h);\r\n        b.style.zIndex = \"3\";\r\n        b.style.background = \"rgba(0,0,0,0)\";\r\n    \r\n        // Save position and size for later use\r\n        b.originalX = x;\r\n        b.originalY = y;\r\n        b.originalW = w;\r\n        b.originalH = h;\r\n        b.setCurrentFrame = function (num: number) {\r\n            this.currentFrame = this.images[num];\r\n            this.style.backgroundImage = \"url(\" + this.currentFrame.src + \")\";\r\n        }\r\n        b.redraw = () => {\r\n            this.moveDOM(b, b.originalX, b.originalY);\r\n            this.resizeDOM(b, b.originalW, b.originalH);\r\n            if (b.currentFrame) b.style.backgroundImage = \"url(\" + b.currentFrame.src + \")\";\r\n        }\r\n        if (images) {\r\n            b.images = images;\r\n        }\r\n        if (clickHandler) {\r\n            b.addEventListener(\"click\", clickHandler);\r\n        }\r\n        if (className) {\r\n            b.classList.add(className);\r\n        }\r\n    \r\n        return b;\r\n    }\r\n\r\n    /**\r\n     * Utility function used to ensure that a group of buttons can behave like a choice-group or radio-button selection. \r\n     * When one button is clicked, that button will be disabled and others in the group will be made active. This ensures\r\n     * only one button can be 'selected'.\r\n     * @param buttons An array of buttons that are to behave as a single choice-group\r\n     * @param num The index of the button to which an event handler is being added\r\n     * @param callbackFn The callback function that should execute once button states have been adjusted\r\n     * @returns \r\n     */\r\n    export function createChoiceGroupFunction<T extends SequencerButton>(this: MarioSequencer, buttons: T[], num: number, callbackFn: <CBT extends SequencerButton>(el: (CBT)) => void): (this: HTMLButtonElement, e: MouseEvent) => void {\r\n        const sequencer = this;\r\n\r\n        // Clone the button Array and store reference to the clicked button\r\n        const clone = buttons.slice(0); \r\n        const self = clone[num];\r\n\r\n        // Store a reference to other buttons in the choice group\r\n        clone.splice(num, 1); \r\n        const otherButtons = clone;\r\n\r\n        // When clicked\r\n        return function(this: HTMLButtonElement, e: MouseEvent) {\r\n            const btn = this as T;\r\n\r\n            // Play click sound\r\n            if (!(e as any).soundOff) sequencer.ASSETS.SOUNDS[17].play(8);\r\n            \r\n            // Choice / Option is now selected, so set image and disable button\r\n            this.disabled = true;\r\n            btn.setCurrentFrame(1);\r\n\r\n            // Enable other buttons in group\r\n            otherButtons.map(function (x) {\r\n                x.disabled = false;\r\n                x.setCurrentFrame(0);\r\n            });\r\n\r\n            // Execute callback function\r\n            callbackFn(self);\r\n        };\r\n    }\r\n    \r\n    //#endregion\r\n\r\n    //#region Animation helpers\r\n\r\n    export function showSpriteFrame(btn: SequencerButton, frameLength: number) {\r\n        return function (num: number) {\r\n            return new Promise<void>(function (resolve, reject) {\r\n                setTimeout(function() {\r\n                    btn.style.backgroundImage = \"url(\" + btn.images[num].src + \")\";\r\n                    resolve()\r\n                }, frameLength);\r\n            });\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    export async function getImageElFromPath(path: string) {\r\n        return new Promise<HTMLImageElement>((resolve, reject) => {\r\n            const image = new Image();\r\n            image.src = path;\r\n            image.onload = () => {\r\n                resolve(image);\r\n            };\r\n            image.onerror = () => {\r\n                // handle later\r\n            }\r\n        });\r\n    }\r\n\r\n    export function sliceImage(this: MarioSequencer, img: HTMLImageElement, width: number, height: number) {\r\n        const { MAGNIFY } = this.CONST;\r\n        const result: HTMLImageElement[] = [];\r\n        const imgw = img.width * MAGNIFY;\r\n        const imgh = img.height * MAGNIFY;\r\n        const num = Math.floor(img.width / width);\r\n        const all = num * Math.floor(img.height / height);\r\n        const charw = width * MAGNIFY;\r\n        const charh = height * MAGNIFY;\r\n\r\n        for (let i = 0; i < all; i++) {\r\n            const tmpcan = document.createElement(\"canvas\");\r\n            tmpcan.width  = charw;\r\n            tmpcan.height = charh;\r\n            const tmpctx = tmpcan.getContext('2d');\r\n            if (tmpctx) {\r\n                tmpctx.imageSmoothingEnabled = false;\r\n                tmpctx.drawImage(\r\n                    img, \r\n                    (i % num) * width, Math.floor(i / num) * height,\r\n                    width, height, 0, 0, charw, charh\r\n                );\r\n            }\r\n            const charimg = new Image();\r\n            charimg.src = tmpcan.toDataURL();\r\n            result[i] = charimg;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export function clone(obj: any) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n}\r\n\r\nexport default Utils;","// extracted by mini-css-extract-plugin\nexport default {\"marioSequencer\":\"yTFHQm16Fu2lo5Sqs8iT\",\"mag1x\":\"xTtMW1Psn0SPsihvnKfH\",\"mag2x\":\"OJAprIY_G5RLJjvhPUak\",\"mag3x\":\"WdRzIhUquDXwXynqFgA6\",\"playBtn\":\"U1meHdgWpOA9vU0jbtcL\",\"stopBtn\":\"WYUvtHzL8HX_XQ4oiY2Y\",\"loopBtn\":\"XSIBXVxmBvgSDfKqWxdD\",\"scoreScroll\":\"Cnz701ioK7oELYepSZwB\",\"tempo\":\"keKt_gNCI4vGK7c9kCAx\",\"clearBtn\":\"NttrDqMWvGKnDDI88W9B\"};","import { MarioSequencer } from \"./app\";\r\nimport { \r\n    BeatButton, \r\n    GameStatus, \r\n    InstrumentButton, \r\n    ISequencerBtnCreationArgs, \r\n    MarioSequencerSong, \r\n    SequencerBtnEvent, \r\n    SequencerButton, \r\n    SequencerSlider, \r\n    ToggleButton \r\n} from \"./app.types\";\r\nimport { Mario } from \"./mario\";\r\nimport EmbeddedSongs from \"./songs\";\r\nimport EasyTimer from \"./timer\";\r\nimport { EmitClickEvent } from \"./eventHandling\";\r\nimport Utils from \"./utils\";\r\n\r\nimport styles from \"./app.module.scss\";\r\n\r\nexport namespace UI {\r\n    export class Loader {\r\n        private _sequencer: MarioSequencer;\r\n        \r\n        private _sliceImage: (...args: Parameters<typeof Utils.sliceImage>) => ReturnType<typeof Utils.sliceImage>;\r\n        private _createButton: (...args: Parameters<typeof Utils.createButton>) => ReturnType<typeof Utils.createButton>;\r\n        private _createChoiceGroupFunction: (...args: Parameters<typeof Utils.createChoiceGroupFunction>) => ReturnType<typeof Utils.createChoiceGroupFunction>;\r\n    \r\n        constructor(sequencer: MarioSequencer) {\r\n            this._sequencer = sequencer;\r\n            this._onMouse = this._onMouse.bind(this);\r\n            this._onMouseMove = this._onMouseMove.bind(this);\r\n            this._sliceImage = Utils.boundFn(sequencer, Utils.sliceImage);\r\n            this._createButton = Utils.createButton.bind(sequencer);\r\n            this._createChoiceGroupFunction = Utils.createChoiceGroupFunction.bind(sequencer);\r\n        }\r\n        public async init(reInit?: boolean) {\r\n            // Prepare drawing surfaces / layers\r\n            await this._initLayers();\r\n    \r\n            await this._initImageAssets(reInit);\r\n    \r\n            this._initBomb();\r\n            this._initInstrumentButtons();\r\n            this._initEndMarkButton();\r\n            this._initPlayButton();\r\n            this._initStopButton();\r\n            this._initLoopButton();\r\n            this._initScrollRange();\r\n            this._initBeatButtons();\r\n            this._initSongButtons();\r\n            this._initUndoDog();\r\n            this._initEraserButton();\r\n            this._initTempoRange();\r\n            this._initClearButton();\r\n            this._sequencer.mario = new Mario(this._sequencer);\r\n            \r\n            if (!reInit) {\r\n            \r\n                this._sequencer.initMusicScore();\r\n                this._initScreen();\r\n                this._initKeyboardEventListeners();\r\n                this._initMouseEvents();\r\n    \r\n            } \r\n        }\r\n    \r\n        /** Adds the necessary Canvas layers to the DOM, sizes them appropriately and stores a reference to the 2D Canvas Contexts in the App */\r\n        private async _initLayers() {\r\n            const s = this._sequencer;\r\n            const { MAGNIFY, ORGHEIGHT, ORGWIDTH, SCRHEIGHT } = s.CONST;\r\n            const i = Utils.getImageElFromPath;\r\n    \r\n            // Check specified container has necessary canvas layers, if not create them\r\n            let layer1 = document.querySelector('#layer1') as HTMLCanvasElement;\r\n            let layer2 = document.querySelector('#layer2') as HTMLCanvasElement;\r\n            if (layer1) {\r\n                s.Layer1 = layer1;\r\n            } else {\r\n                layer1 = document.createElement('canvas');\r\n                layer1.id = \"layer1\";\r\n                layer1.classList.add(\"game\");\r\n                s.container.appendChild(layer1);\r\n                s.Layer1 = layer1;\r\n            }\r\n            if (layer2) {\r\n                s.Layer2 = layer2;\r\n            } else {\r\n                layer2 = document.createElement('canvas');\r\n                layer2.id = \"layer2\";\r\n                layer2.classList.add(\"game\");\r\n                s.container.appendChild(layer1);\r\n                s.Layer2 = layer2;\r\n            }\r\n    \r\n            // Store drawing context(s)\r\n            s.L1C = s.Layer1.getContext('2d');\r\n            s.L2C = s.Layer2.getContext('2d');\r\n            \r\n            // Draw background\r\n            s.Layer1.width = ORGWIDTH * MAGNIFY;\r\n            s.Layer1.height = ORGHEIGHT * MAGNIFY;\r\n            s.Layer2.width = ORGWIDTH * MAGNIFY;\r\n            s.Layer2.height = SCRHEIGHT * MAGNIFY;\r\n            if (s.L1C) s.L1C.imageSmoothingEnabled = false;\r\n            if (s.L2C) s.L2C.imageSmoothingEnabled = false;\r\n    \r\n            const bg = await i(\"image/mat.png\");\r\n            if (s.L1C) s.L1C.drawImage(bg, 0, 0, bg.width * MAGNIFY, bg.height * MAGNIFY);       \r\n        }\r\n    \r\n        /** Loads spritesheets so they can be used for image slicing and resize operations */\r\n        private async _loadSpritesheets() {\r\n            const s = this._sequencer;\r\n            const i = Utils.getImageElFromPath;\r\n            const Chars = await i(\"image/character_sheet.png\");\r\n            const Bomb = await i(\"image/bomb.png\");\r\n            const End = await i(\"image/end_mark.png\");\r\n            const PlayBtn = await i(\"image/play_button.png\");\r\n            const Repeat = await i(\"image/repeat_head.png\");\r\n            const Semitone = await i(\"image/semitone.png\");\r\n            const Numbers = await i(\"image/numbers.png\");\r\n            const Stop = await i(\"image/stop_button.png\");\r\n            const Beat = await i(\"image/beat_button.png\");\r\n            const Song = await i(\"image/song_buttons.png\");\r\n            const ThumbSlider = await i(\"image/slider_thumb.png\");\r\n            const ClearBtn = await i(\"image/clear_button.png\");\r\n            const Mario = await i(\"image/Mario.png\");\r\n            const UndoDog = await i(\"image/undo_dog.png\");\r\n            s.ASSETS.SPRITESHEETS = {\r\n                Chars,\r\n                Bomb,\r\n                End,\r\n                PlayBtn,\r\n                Repeat,\r\n                Semitone,\r\n                Numbers,\r\n                Stop,\r\n                Beat,\r\n                Song,\r\n                ThumbSlider,\r\n                ClearBtn,\r\n                Mario,\r\n                UndoDog\r\n            };\r\n        }\r\n    \r\n        /** Loads and stores sprite frames as separate HTMLImageElements. Recalculates on change to Magnify ie. when app is reinitialised */\r\n        private async _initImageAssets(skipLoading?: boolean) {\r\n            const s = this._sequencer;\r\n            if (!skipLoading) {\r\n                await this._loadSpritesheets();\r\n            }\r\n            const { SPRITESHEETS: ss } = s.ASSETS;\r\n            const i = Utils.getImageElFromPath;\r\n            if (ss) {\r\n                const repeatMarks = this._sliceImage(ss.Repeat, 13, 62);\r\n                s.ASSETS.IMAGES = {\r\n                    Tools: this._sliceImage(ss.Chars, 16, 16),\r\n                    Bomb: this._sliceImage(ss.Bomb, 14, 18),\r\n                    GClef: await i(\"image/G_Clef.png\"),\r\n                    Numbers: this._sliceImage(ss.Numbers, 5, 7),\r\n                    Mario: this._sliceImage(ss.Mario, 16, 22),\r\n                    Sweat: await i(\"image/mario_sweat.png\"),\r\n                    PlayBtn: this._sliceImage(ss.PlayBtn, 12, 15),\r\n                    StopBtn: this._sliceImage(ss.Stop, 16, 15),\r\n                    ClearBtn: this._sliceImage(ss.ClearBtn, 34, 16),\r\n                    ThumbSlider: this._sliceImage(ss.ThumbSlider, 5, 8),\r\n                    BeatBtn: this._sliceImage(ss.Beat, 14, 15),\r\n                    SongBtns: this._sliceImage(ss.Song, 15, 17),\r\n                    EndMarkBtn: this._sliceImage(ss.End, 14, 13), // Note: Different size from the button,\r\n                    EndMark: repeatMarks[2],\r\n                    Semitone: this._sliceImage(ss.Semitone, 5, 12),\r\n                    Repeat: repeatMarks,\r\n                    UndoDog: this._sliceImage(ss.UndoDog, 14, 15),\r\n                };\r\n            }\r\n        }\r\n    \r\n        /** Initialises the bomb icon. In the original Mario Paint, this button was how you exited the game's different modes\r\n         * like the music composer and stamp editor. It isn't functional in this app, but we animate it all the same...\r\n         */\r\n        private _initBomb() {\r\n            const s = this._sequencer;\r\n            const { MAGNIFY } = s.CONST;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES && s.L1C) {\r\n                s.TIMERS.bomb = new EasyTimer(150, function() {\r\n                    const x = 9 * MAGNIFY;\r\n                    const y = 202 * MAGNIFY;\r\n                    const img = IMAGES.Bomb[this.currentFrame];\r\n                    if (s.L1C) s.L1C.drawImage(img, x, y);\r\n                    switch (this.currentFrame) {\r\n                        case 0:\r\n                            this.currentFrame = 1;\r\n                            break;\r\n                        case 1:\r\n                            this.currentFrame = 0;\r\n                            break;\r\n                        case 2:\r\n                            break;\r\n                    }\r\n                    if (s.appState.selectedSongBtn == undefined || s.appState.gameStatus != GameStatus.Playing) return;\r\n                    s.appState.selectedSongBtn.style.backgroundImage =\r\n                        \"url(\" + s.appState.selectedSongBtn.images[this.currentFrame + 1].src + \")\";\r\n                });\r\n                s.TIMERS.bomb.switch = true; // always true for the bomb\r\n                s.TIMERS.bomb.currentFrame = 0;\r\n            }\r\n        }\r\n    \r\n        /** Initialises the various instrument icon buttons that line the top of the screen */\r\n        private _initInstrumentButtons() {\r\n            const s = this._sequencer;\r\n            const ui = this;\r\n            const { BUTTONS, SOUNDS, IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                // Make buttons for changing a kind of notes.\r\n                //   1st mario:   x=24, y=8, width=13, height=14\r\n                //   2nd Kinopio: X=38, y=8, width=13, height=14\r\n                //   and so on...\r\n                const bimgs = IMAGES.Tools;\r\n                for (let i = 0; i < 15; i++) {\r\n                    const b = this._getOrCreateButton((24 + 14 * i), 8, 13, 14, 'instr_' + i, [bimgs[i]], () => {\r\n                        b.se.play(8); // Note F\r\n                        s.setState({\r\n                            currentTool: b.num\r\n                        });\r\n                        ui._clearEraserButton();\r\n                        ui.changeCursor(b.num);\r\n                        if (b.se.image) ui._drawCurChar(b.se.image);\r\n                    }) as InstrumentButton;\r\n                    b.num = i;\r\n                    b.se = SOUNDS[i];\r\n                    b.se.image = bimgs[i];\r\n                    BUTTONS[i] = b;\r\n                }\r\n            }\r\n        }\r\n    \r\n        private _initEndMarkButton() {\r\n            const s = this._sequencer;\r\n            const ui = this;\r\n            const { MAGNIFY } = s.CONST;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const b = this._getOrCreateButton(235, 8, 13, 14, 'endmark', IMAGES.EndMarkBtn, () => {\r\n                    s.TIMERS.endMark.switch = true;\r\n                    s.setState({\r\n                        currentTool: 15\r\n                    });\r\n                    s.ASSETS.SOUNDS[15].play(8);\r\n                    ui._clearEraserButton();\r\n                    s.drawEndMarkIcon(b.images[0]);\r\n                });\r\n                b.images = IMAGES.EndMarkBtn;\r\n                \r\n                // Setup flashing end-bar cursor that displays when end mark button is selected\r\n                s.TIMERS.endMark = new EasyTimer(150, function () {\r\n                    // If current instrument/selected-button is not end mark, just return;\r\n                    if (s.appState.currentTool != 15) {\r\n                        this.switch = false;\r\n                        return;\r\n                    }\r\n                    // alternate frames\r\n                    this.currentFrame = (this.currentFrame == 0) ? 1 : 0;\r\n                    if (s.Layer2) s.Layer2.style.cursor = 'url(' + this.images[this.currentFrame].src + ')' +\r\n                    7 * MAGNIFY +' '+ 7 * MAGNIFY + ', auto';\r\n                }, b.images);\r\n    \r\n                s.ASSETS.BUTTONS[15] = b;\r\n            }\r\n        }\r\n    \r\n        private _initPlayButton() {\r\n            const s = this._sequencer;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const b = this._getOrCreateButton(55, 168, 12, 15, 'play', IMAGES.PlayBtn, function (this: SequencerButton, e: MouseEvent) {\r\n                    const play = new Event(\"playsong\", { bubbles: true });\r\n                    this.dispatchEvent(play);\r\n                }, styles.playBtn);\r\n                b.setCurrentFrame(0);\r\n            }\r\n        }\r\n    \r\n        private _initStopButton() {\r\n            const s = this._sequencer;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const imgs = IMAGES.StopBtn;\r\n                const b = this._getOrCreateButton(21, 168, 16, 15, 'stop', [imgs[0], imgs[1]], function (this: SequencerButton, e: MouseEvent) {\r\n                    const stop = new Event(\"stopsong\", { bubbles: true });\r\n                    this.dispatchEvent(stop);\r\n                }, styles.stopBtn);\r\n                b.disabled = false;\r\n                b.setCurrentFrame(1);\r\n            }\r\n        }\r\n    \r\n        private _initLoopButton() {\r\n            const s = this._sequencer;\r\n            const { appState } = s;\r\n            const { IMAGES } = s.ASSETS;\r\n            const sequencer = this;\r\n            if (IMAGES) {\r\n                const imgs = IMAGES.StopBtn;\r\n                const b = this._getOrCreateButton(85, 168, 16, 15, 'loop', [imgs[2], imgs[3]], function(e) {\r\n                    let loop = true;\r\n                    if (s.appState.curScore.loop) {\r\n                        loop = false;\r\n                    }\r\n                    let num = loop ? 1 : 0;\r\n                    s.setState({\r\n                        ...appState,\r\n                        curScore: {\r\n                            ...appState.curScore,\r\n                            loop\r\n                        }\r\n                    });\r\n                    this.setCurrentFrame(num);\r\n                    s.ASSETS.SOUNDS[17].play(8);\r\n                }, styles.loopBtn) as ToggleButton;\r\n                b.setCurrentFrame(0);\r\n                s.appState.curScore.loop = false;\r\n                b.reset = function () {\r\n                    s.appState.curScore.loop = false;\r\n                    this.setCurrentFrame(0);\r\n                };\r\n                b.set   = function () {\r\n                    s.appState.curScore.loop = true;\r\n                    this.setCurrentFrame(1);\r\n                }\r\n            }\r\n        }\r\n    \r\n        private _initScrollRange() {\r\n            const s = this._sequencer;\r\n            const { MAGNIFY } = s.CONST;\r\n            let r = document.getElementById('scroll') as SequencerSlider;\r\n            if (r === null) {\r\n                r = document.createElement('input') as SequencerSlider;\r\n                r.id = 'scroll';\r\n                r.classList.add(styles.scoreScroll);\r\n                r.type = 'range';\r\n                r.value = \"0\";\r\n                r.max = (s.curMaxBars - 6).toString();\r\n                r.min = \"0\";\r\n                r.step = \"0.2\";\r\n                (r.style as any)['-webkit-appearance']='none';\r\n                (r.style as any)['border-radius'] = '0px';\r\n                (r.style as any)['background-color'] = '#F8F8F8';\r\n                (r.style as any)['box-shadow'] = 'inset 0 0 0 #000';\r\n                (r.style as any)['vertical-align'] = 'middle';\r\n                r.style.position = 'absolute';\r\n                r.style.margin = \"0\";\r\n                r.originalX = 191;\r\n                r.originalY = 159;\r\n                r.originalW = 50;\r\n                r.originalH = 7;\r\n                s.moveDOM(r, r.originalX, r.originalY);\r\n                s.resizeDOM(r, r.originalW, r.originalH);\r\n                r.redraw = () => {\r\n                    s.moveDOM(r, r.originalX, r.originalY);\r\n                    s.resizeDOM(r, r.originalW, r.originalH);\r\n                };\r\n                r.addEventListener(\"input\", function(this: SequencerSlider, e: Event) {\r\n                    s.appState.curPos = parseInt(this.value);\r\n                });\r\n                if (s.Layer2) {\r\n                    s.Layer2.addEventListener(\"wheel\", (e) => {\r\n                        if (e.deltaY < 0) {\r\n                            r.valueAsNumber += 0.2;\r\n                        } else {\r\n                            r.valueAsNumber -= 0.2;\r\n                        }\r\n                        let event = new Event('input', {bubbles: true, cancelable: true});\r\n                        r.dispatchEvent(event);\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    });\r\n                }\r\n                s.container.appendChild(r);\r\n            }\r\n        }\r\n    \r\n        private _initBeatButtons() {\r\n            const s = this._sequencer;\r\n            const createChoiceGroup = this._createChoiceGroupFunction.bind(s);\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const imgs = IMAGES.BeatBtn;\r\n                const b1 = this._getOrCreateButton(81, 203, 14, 15, '3beats', [imgs[0], imgs[1]]) as BeatButton;\r\n                b1.beats = 3;\r\n                b1.setCurrentFrame(0);\r\n                b1.disabled = false;\r\n                \r\n                const b2 = this._getOrCreateButton(96, 203, 14, 15, '4beats', [imgs[2], imgs[3]]) as BeatButton;\r\n                b2.beats = 4;\r\n                b2.setCurrentFrame(1);\r\n                b2.disabled = true;\r\n                \r\n                const func = function(self: SequencerButton) {\r\n                    const { appState } = s;\r\n                    s.setState({\r\n                        ...appState,\r\n                        curScore: {\r\n                            ...appState.curScore,\r\n                            beats: (self as BeatButton).beats\r\n                        }\r\n                    });\r\n                };\r\n                \r\n                b2.addEventListener(\"click\", this._createChoiceGroupFunction([b1, b2], 1, func));\r\n                b1.addEventListener(\"click\", this._createChoiceGroupFunction([b1, b2], 0, func));\r\n            }\r\n        }\r\n    \r\n        private _initSongButtons() {\r\n            const s = this._sequencer;\r\n            const ui = this;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const imgs = IMAGES.SongBtns;\r\n    \r\n                // Create buttons\r\n                const songButtons = ['frog','beak','1up'].map(function (id, idx) {\r\n                    const b = ui._getOrCreateButton(136 + 24 * idx, 202, 15, 17, id, imgs.slice(idx * 3, idx * 3 + 3)) as ToggleButton;\r\n                    b.id = id;\r\n                    b.num = idx;\r\n                    b.setCurrentFrame(0);\r\n                    b.disabled = false;\r\n                    return b;\r\n                });\r\n    \r\n                // Callback function that loads an appropriate embedded song in to memory and reinitialises various properties\r\n                const callbackFunc = function (self: SequencerButton) {\r\n                    const { appState } = s;\r\n                    const curScore: MarioSequencerSong = Utils.clone(EmbeddedSongs[self.num]);\r\n                    const tempoEl = document.getElementById(\"tempo\") as HTMLInputElement;\r\n                    if (tempoEl) tempoEl.value = curScore.tempo.toString();\r\n                    const b = document.getElementById(\"loop\") as ToggleButton;\r\n                    if (curScore.loop) b.set(); else b.reset();\r\n                    const scr = document.getElementById(\"scroll\") as HTMLInputElement;\r\n                    scr.max = (curScore.end - 5).toString();\r\n                    scr.value = \"0\";\r\n                    \r\n                    s.setState({\r\n                        curScore,\r\n                        curPos: 0,\r\n                        selectedSongBtn: self as ToggleButton,\r\n                    });\r\n                    s.drawScore(s.appState.curPos, s.appState.curScore['notes'], 0);\r\n                };\r\n    \r\n                // Attach choice group event handler to each song button\r\n                songButtons.forEach((btn, idx) => {\r\n                    songButtons[idx].addEventListener(\"click\", this._createChoiceGroupFunction(songButtons, idx, callbackFunc));\r\n                });\r\n            }\r\n        }\r\n    \r\n        private _initUndoDog() {\r\n            const s = this._sequencer;\r\n            const ui = this;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const b = this._getOrCreateButton(216, 203, 14, 15, 'undoDog', IMAGES.UndoDog, async function () {\r\n                    if (s.appState.gameStatus === GameStatus.Edit) {\r\n                        s.ASSETS.SOUNDS[18].play(8);\r\n                        const frame = Utils.showSpriteFrame(this, 150);\r\n                        await frame(1);\r\n                        await frame(0);\r\n        \r\n                        const previousState = s.appState.history.pop();\r\n                        let changeCursor = previousState && s.appState.currentTool !== previousState.currentTool;\r\n                        let changeSongBtn = previousState && previousState.selectedSongBtn !== s.appState.selectedSongBtn;\r\n                        let changeBeat = previousState && previousState.curScore.beats !== s.appState.curScore.beats;\r\n                        if (previousState) {\r\n                            s.appState = previousState;\r\n                        } \r\n                        if (changeCursor) {\r\n                            ui.changeCursor(s.appState.currentTool);\r\n                        }\r\n                        if (changeSongBtn) {\r\n                            ['frog','beak','1up'].forEach(function (id, idx) {\r\n                                const b = document.getElementById(id) as ToggleButton;\r\n                                b.setCurrentFrame(0);\r\n                                b.disabled = false;\r\n                            });\r\n                            if (s.appState.selectedSongBtn) {\r\n                                s.appState.selectedSongBtn.setCurrentFrame(1);\r\n                                s.appState.selectedSongBtn.disabled = true;\r\n                            }\r\n                        }\r\n                        if (changeBeat) {\r\n                            ['3beats', '4beats'].forEach(function (id, idx) {\r\n                                const b = document.getElementById(id) as BeatButton;\r\n                                const isSelected = b.beats === s.appState.curScore.beats; \r\n                                b.setCurrentFrame(isSelected ? 1 : 0);\r\n                                b.disabled = isSelected;\r\n                            })\r\n                        }\r\n                        s.drawScore(s.appState.curPos, s.appState.curScore.notes, s.appState.curPos);\r\n                    }\r\n                });\r\n                b.setCurrentFrame(0);\r\n            }\r\n        }\r\n    \r\n        private _initEraserButton() {\r\n            const s = this._sequencer;\r\n            const ui = this;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const imgs = IMAGES.SongBtns;\r\n                const b = this._getOrCreateButton(40, 202, 15, 17, 'eraser', [imgs[9], imgs[10], imgs[11]], function() {\r\n                    const btn = this as SequencerButton;\r\n                    s.TIMERS.eraser.switch = true;\r\n                    s.setState({currentTool: 16});\r\n                    s.ASSETS.SOUNDS[17].play(8);\r\n                    s.drawEraserIcon();\r\n                    ui._clearSongButtons();\r\n                    btn.setCurrentFrame(1);\r\n                    if (s.Layer2) s.Layer2.style.cursor = 'url(' + btn.images[2].src + ')' + ' 0 0, auto';\r\n                }) as SequencerButton;\r\n                b.setCurrentFrame(0);\r\n                s.TIMERS.eraser = new EasyTimer(200, function () {\r\n                    // If current is not end mark, just return;\r\n                    if (s.appState.currentTool != 16) {\r\n                    this.switch = false;\r\n                    return;\r\n                    }\r\n                    this.currentFrame = (this.currentFrame == 0) ? 1 : 0;\r\n                });\r\n                s.TIMERS.eraser.currentFrame = 0;\r\n            }\r\n        }\r\n    \r\n        private _initTempoRange() {\r\n            const s = this._sequencer;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const setThumbImage = (range: SequencerSlider) => {\r\n                    const t = IMAGES.ThumbSlider[0];\r\n                    range.image = t;\r\n                    const seqEl = document.querySelector(`.${styles.marioSequencer}`) as HTMLElement;\r\n                    if (seqEl) {\r\n                        seqEl.style.setProperty('--tempoThumbImg', `url('${t.src}')`);\r\n                    }\r\n                };\r\n    \r\n                let r = document.getElementById('tempo') as SequencerSlider;\r\n                if (r === null) {\r\n                    r = document.createElement('input') as SequencerSlider;\r\n                    r.id = \"tempo\";\r\n                    r.classList.add(styles.tempo);\r\n                    r.type = \"range\";\r\n                    r.value = \"525\";\r\n                    r.max = \"1000\";\r\n                    r.min = \"50\";\r\n                    r.step = \"1\";\r\n                    (r.style as any)['-webkit-appearance']='none';\r\n                    (r.style as any)['border-radius'] = '0px';\r\n                    (r.style as any)['background-color'] = 'rgba(0, 0, 0, 0.0)';\r\n                    (r.style as any)['box-shadow'] = 'inset 0 0 0 #000';\r\n                    (r.style as any)['vertical-align'] = 'middle';\r\n                    r.style.position = \"absolute\";\r\n                    r.style.margin = \"0\";\r\n                    r.originalX = 116;\r\n                    r.originalY = 172;\r\n                    r.originalW = 40;\r\n                    r.originalH = 8;\r\n                    s.moveDOM(r, r.originalX, r.originalY);\r\n                    s.resizeDOM(r, r.originalW, r.originalH);\r\n                    r.redraw = () => {\r\n                        s.moveDOM(r, r.originalX, r.originalY);\r\n                        s.resizeDOM(r, r.originalW, r.originalH);\r\n                        setThumbImage(r);\r\n                    };\r\n                    r.addEventListener(\"input\", function(e) {\r\n                        s.appState.curScore.tempo = parseInt(this.value);\r\n                    });\r\n                    r.addEventListener(\"mouseup\", function(e) {\r\n                        const { appState } = s;\r\n                        s.setState({\r\n                            curScore: {\r\n                                ...appState.curScore,\r\n                                tempo: parseInt(this.value)\r\n                            }\r\n                        });\r\n                    })\r\n                    s.container.appendChild(r);\r\n                    setThumbImage(r);\r\n                }\r\n        \r\n                // Prepare range's side buttons for inc/decrements\r\n                const bLeft = this._getOrCreateButton(184, 158, 7, 9, 'toLeft', [], function (e) {\r\n                    const r = document.getElementById('scroll') as HTMLInputElement;\r\n                    let val = parseInt(r.value, 10);\r\n                    if (val > 0) {\r\n                        s.appState.curPos = --val;\r\n                    }\r\n                });\r\n        \r\n                const bRight = this._getOrCreateButton(241, 158, 7, 9, 'toRight', [], function (e) {\r\n                    const r = document.getElementById('scroll') as HTMLInputElement;\r\n                    let val = parseInt(r.value, 10);\r\n                    if (val < s.curMaxBars - 6) {\r\n                        s.appState.curPos = ++val;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    \r\n        private _initClearButton() {\r\n            const s = this._sequencer;\r\n            const ui = this;\r\n            const { IMAGES } = s.ASSETS;\r\n            if (IMAGES) {\r\n                const b = this._getOrCreateButton(200, 176, 34, 16, 'clear', IMAGES.ClearBtn, async function (this: SequencerButton, e: MouseEvent) {\r\n                    this.style.backgroundImage = \"url(\" + this.images[1].src + \")\";\r\n                    s.ASSETS.SOUNDS[19].play(8);\r\n                    const btn = this;\r\n                    const frame = Utils.showSpriteFrame(btn, 150);\r\n                    await frame(2);\r\n                    await frame(1);\r\n                    await frame(0);\r\n                    s.initMusicScore();\r\n                    s.appState.curPos = 0;\r\n                    ui._clearSongButtons();\r\n                }, styles.clearBtn);\r\n                b.setCurrentFrame(0);\r\n            }\r\n        }\r\n\r\n        private _reInitButtonsFromScore() {\r\n            const s = this._sequencer;\r\n            const b = document.getElementById(s.appState.curScore.beats == 3 ? '3beats' : '4beats') as SequencerButton;\r\n            EmitClickEvent(b, true);\r\n\r\n            const r = document.getElementById('scroll') as HTMLInputElement;\r\n            s.curMaxBars = s.appState.curScore.end + 1;\r\n            r.max = (s.curMaxBars - 6).toString();\r\n            r.value = \"0\";\r\n            s.appState.curPos = 0;\r\n\r\n            const tempoRange = document.getElementById(\"tempo\") as HTMLInputElement;\r\n            let tempo = s.appState.curScore.notes[0][0];\r\n            if (typeof tempo == \"string\" && tempo.substr(0, 5) == \"TEMPO\") {\r\n                tempo = tempo.split(\"=\")[1];\r\n                s.appState.curScore.tempo = tempo;\r\n                tempoRange.value = tempo;\r\n            }\r\n        }\r\n\r\n        private _initScreen() {\r\n            const s = this._sequencer;\r\n            const { SOUNDS } = s.ASSETS;\r\n            s.appState.curPos = 0;\r\n            s.appState.currentTool = 0;\r\n            const img = SOUNDS[s.appState.currentTool].image;\r\n            if (img) {\r\n                this._drawCurChar(img);\r\n            }\r\n            this.changeCursor(s.appState.currentTool);\r\n            s.drawScore(s.appState.curPos, s.appState.curScore['notes'], 0);\r\n            window.requestAnimFrame(s.doAnimation);\r\n        }\r\n\r\n        private _initMouseEvents() {\r\n            const s = this._sequencer;\r\n            if (s.Layer2) {\r\n                s.Layer2.addEventListener(\"contextmenu\", this._onMouse);\r\n                s.Layer2.addEventListener(\"click\", this._onMouse);\r\n                s.Layer2.addEventListener(\"mousemove\", this._onMouseMove);\r\n                s.Layer2.addEventListener(\"dragover\", (e) => {\r\n                    e.preventDefault();\r\n                    return false;\r\n                });\r\n                s.Layer2.addEventListener(\"drop\", this._readDroppedFiles);\r\n            }\r\n        }\r\n\r\n        public changeCursor(num: number) {\r\n            const s = this._sequencer;\r\n            const { HALFCHARSIZE } = s.CONST;\r\n            const { SOUNDS } = s.ASSETS;\r\n            const SCREEN = s.Layer2;\r\n            const img = SOUNDS[num].image;\r\n            if (SCREEN && img) {\r\n                SCREEN.style.cursor = 'url(' + img.src + ')' + HALFCHARSIZE +' '+ HALFCHARSIZE + ', auto';\r\n            }\r\n        }\r\n    \r\n        private _drawCurChar(image: HTMLImageElement) {\r\n            const s = this._sequencer;\r\n            const { CHARSIZE, MAGNIFY } = s.CONST;\r\n            const x = 4 * MAGNIFY;\r\n            const y = 7 * MAGNIFY;\r\n            if (s.L1C) {\r\n                s.L1C.beginPath();\r\n                s.L1C.imageSmoothingEnabled = false;\r\n                s.L1C.clearRect(x, y, CHARSIZE, CHARSIZE);\r\n                s.L1C.drawImage(image, x, y);\r\n                s.L1C.fillRect(x, y, CHARSIZE, MAGNIFY);\r\n                s.L1C.fillRect(x, y + CHARSIZE - MAGNIFY, CHARSIZE, MAGNIFY);\r\n            }\r\n        }\r\n\r\n        //#region clear button functions\r\n\r\n        private _clearEraserButton() {\r\n            const s = this._sequencer;\r\n            const b = document.getElementById('eraser') as SequencerButton;\r\n            b.style.backgroundImage = \"url(\" + b.images[0].src + \")\";\r\n            s.TIMERS.eraser.switch = false;\r\n        }\r\n\r\n        private _clearSongButtons() {\r\n            const s = this._sequencer;\r\n            ['frog','beak','1up'].map(function (id, idx) {\r\n                const b = document.getElementById(id) as SequencerButton;\r\n                b.disabled = false;\r\n                b.style.backgroundImage = \"url(\" + b.images[0].src + \")\";\r\n            });\r\n            s.appState.selectedSongBtn = undefined;\r\n        }\r\n\r\n        //#endregion\r\n\r\n        //#region mouse event listeners \r\n\r\n        private _onMouse(e: MouseEvent) {\r\n            const s = this._sequencer;\r\n            e.preventDefault();\r\n            if (e.type === \"contextmenu\") {\r\n                document.getElementById('undoDog')?.click();\r\n                return;\r\n            }\r\n\r\n            const { OFFSETLEFT, OFFSETTOP } = s.CONST;\r\n            const { SOUNDS } = s.ASSETS;\r\n            if (s.appState.gameStatus != GameStatus.Edit) return;\r\n\r\n            const realX = e.clientX - OFFSETLEFT;\r\n            const realY = e.clientY - OFFSETTOP;\r\n\r\n            const g = this.toGrid(realX, realY);\r\n            if (g == false) return;\r\n            const gridX = g[0];\r\n            let gridY = g[1];\r\n\r\n            // Map logical x to real bar number\r\n            const b = s.appState.curPos + gridX - 2;\r\n\r\n            // process End Mark\r\n            if (s.appState.currentTool == 15) {\r\n                s.updateHistory();\r\n                s.appState.curScore.end = b;\r\n                return;\r\n            }\r\n\r\n            if (b >= s.appState.curScore.end) return;\r\n\r\n            const allNotes = [...s.appState.curScore['notes']];\r\n            const notes = [...allNotes[b]];\r\n            // Delete\r\n            if (s.appState.currentTool == 16 || e.button == 2) {\r\n                // Delete Top of the stack\r\n                s.updateHistory();\r\n                for (let i = notes.length - 1; i >= 0; i--) {\r\n                if ((notes[i] as number & 0x3F) == gridY) {\r\n                    notes.splice(i, 1);\r\n                    s.appState.curScore.notes[b] = notes;\r\n                    SOUNDS[17].play(8);\r\n                    break;\r\n                }\r\n                }\r\n                return;\r\n            }\r\n\r\n            // Ignore if note already added\r\n            let note = (s.appState.currentTool << 8) | gridY;\r\n            if (notes.indexOf(note) != -1) return;\r\n            \r\n            // Handle semitone\r\n            if (e.shiftKey) gridY |= 0x80;\r\n            if (e.ctrlKey ) gridY |= 0x40;\r\n            SOUNDS[s.appState.currentTool].play(gridY);\r\n            note = (s.appState.currentTool << 8) | gridY;\r\n            notes.push(note);\r\n            allNotes[b] = notes;\r\n            s.setState({\r\n                curScore: {\r\n                    ...s.appState.curScore,\r\n                    notes: allNotes\r\n                }\r\n            });\r\n        }\r\n\r\n        private _onMouseMove(e: MouseEvent) {\r\n            const s = this._sequencer;\r\n            s.appState.mouseX = e.clientX;\r\n            s.appState.mouseY = e.clientY;\r\n        }\r\n\r\n        private _readDroppedFiles(e: DragEvent) {\r\n            const s = this._sequencer;\r\n            e.preventDefault();\r\n            this._clearSongButtons();\r\n            s.resetScore();\r\n            // function to read a given file\r\n            // Input is a instance of a File object.\r\n            // Returns a instance of a Promise.\r\n            function readFile(file: File) {\r\n                return new Promise<FileReader|null>(function(resolve, reject) {\r\n                    var reader = new FileReader();\r\n                    (reader as any).name = file.name;\r\n                    reader.addEventListener(\"load\", function(e) {\r\n                        resolve(e.target);\r\n                    });\r\n                    reader.readAsText(file, 'shift-jis');\r\n                });\r\n            }\r\n\r\n            if (e.dataTransfer) {\r\n                // FileList to Array for Mapping\r\n                var files = [].slice.call(e.dataTransfer.files);\r\n                // Support Mr.Phenix's files. He numbered files with decimal numbers :-)\r\n                // http://music.geocities.jp/msq_phenix/\r\n                // For example, suite15.5.msq must be after the suite15.msq\r\n                files.sort(function(a: File,b: File) {\r\n                    var n1 = a.name;\r\n                    var n2 = b.name;\r\n                    function strip(name: string) {\r\n                        let n = /\\d+\\.\\d+|\\d+/.exec(name);\r\n                        if (n == null) return 0;\r\n                        if (!n[0]) return 0;\r\n                        return parseFloat(n[0]);\r\n                    }\r\n                    return strip(n1) - strip(n2);\r\n                });\r\n                files.map(readFile).reduce(function(chain, fp, idx) {\r\n                    return chain.then(function() {\r\n                        return fp;\r\n                    }).then(function(fileReader: FileReader|null) {\r\n                        if (fileReader) {\r\n                            var ext = (fileReader as any).name.slice(-3);\r\n                            if (ext == \"msq\") {\r\n                                s.addMSQ(fileReader.result as string);\r\n                            } else {\r\n                                s.addJSON(fileReader.result as string);\r\n                            }\r\n                        }\r\n                    }).catch(function(err) {\r\n                        alert(\"Loading MSQ failed: \" + err.message);\r\n                        console.error(err);\r\n                    });\r\n                }, Promise.resolve())\r\n                .then(this._reInitButtonsFromScore);\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        //#endregion\r\n\r\n        //#region keyboard event listeners\r\n\r\n        private _initKeyboardEventListeners() {\r\n            const s = this._sequencer;\r\n            document.addEventListener('keyup', function(e) {\r\n                s.appState.keyPresses = s.appState.keyPresses.filter(k => k !== e.key);\r\n                const isShifting = s.appState.keyPresses.indexOf('Shift') >= 0;\r\n                if (e.key == \"r\" && isShifting && s.canvasRecorder) {\r\n                    s.canvasRecorder.start();\r\n                }\r\n                if (e.key == \"s\" && isShifting && s.canvasRecorder) {\r\n                    s.canvasRecorder.stop();\r\n                    s.canvasRecorder.save(\"composer-song.webm\");\r\n                }\r\n            });\r\n            document.addEventListener('keydown',function(e) {\r\n                if (s.appState.keyPresses.indexOf(e.key) < 0) {\r\n                    s.appState.keyPresses.push(e.key);\r\n                }\r\n                const playBtn = document.getElementById('play') as HTMLButtonElement;\r\n                const stopBtn = document.getElementById('stop') as HTMLButtonElement;\r\n                const r = document.getElementById('scroll') as HTMLInputElement;\r\n                let val: number;\r\n                let redraw = false;\r\n                const isShifting = s.appState.keyPresses.indexOf('Shift') >= 0;\r\n                switch (e.key) {\r\n                case ' ': // space -> play/stop or restart with shift\r\n                    if (playBtn.disabled == false || isShifting) {\r\n                        if (s.appState.gameStatus === GameStatus.Edit) {\r\n                            playBtn.click();\r\n                        } else {\r\n                            if (isShifting) {\r\n                                s.appState.curPos = 0;\r\n                                r.valueAsNumber = 0;\r\n                                cancelAnimationFrame(s.appState.animeId);\r\n                                s.appState.animeId = window.requestAnimFrame(s.doMarioEnter);\r\n                            }\r\n                        }\r\n                    //   sequencer._onPlayListener.call(playBtn, sequencer);\r\n                    } else {\r\n                        stopBtn.click();\r\n                    //   sequencer._onStopListener.call(stopBtn, sequencer);\r\n                    }\r\n                    e.preventDefault();\r\n                    break; \r\n            \r\n                case 'ArrowLeft': // left -> scroll left\r\n                    r.valueAsNumber -= isShifting ? 1 : 0.2;\r\n                    redraw = true;\r\n                    e.preventDefault();\r\n                    break;\r\n            \r\n                case 'ArrowRight': // right -> scroll right\r\n                    r.valueAsNumber += isShifting ? 1 : 0.2;\r\n                    redraw = true;\r\n                    e.preventDefault();\r\n                    break;\r\n                }\r\n                if (redraw) {\r\n                    let event = new Event('input', {bubbles: true, cancelable: true});\r\n                    r.dispatchEvent(event);\r\n                }\r\n            });\r\n        }\r\n\r\n        //#endregion\r\n        \r\n        private _getOrCreateButton(x: number, y: number, w: number, h: number, id: string, images: HTMLImageElement[], clickHandler?: (this: SequencerButton, ev: SequencerBtnEvent) => any, className?: string) {\r\n            const s = this._sequencer;\r\n            let b = document.getElementById(id) as SequencerButton;\r\n            if (b === null) {\r\n                b = this._createButton({x,y,w,h,id,images,clickHandler,className});\r\n                s.container.appendChild(b as HTMLButtonElement);\r\n            } else {\r\n                b.images = images;\r\n            }\r\n            \r\n            return b;\r\n        }\r\n        \r\n        /**\r\n         * Translates App Container relative X + Y coordinates to positions on a grid\r\n         * Used for placement of notes, cursor placeholder and more\r\n         * @param realX X coordinate relative to top left of container\r\n         * @param realY Y coordinate relative to top left of container\r\n         * @returns false if outside the grid or hovering the G-Clef area, or [gridX, gridY]\r\n         */\r\n        public toGrid(realX: number, realY: number) {\r\n            const s = this._sequencer;\r\n            const { CHARSIZE, HALFCHARSIZE, MAGNIFY } = s.CONST;\r\n            const gridLeft   = (8   + 0) * MAGNIFY;\r\n            const gridTop    = (41     ) * MAGNIFY;\r\n            const gridRight  = (247 - 4) * MAGNIFY;\r\n            const gridBottom = (148 - 4) * MAGNIFY;\r\n            if (realX < gridLeft || realX > gridRight ||\r\n                realY < gridTop  || realY > gridBottom)\r\n                return false;\r\n\r\n            let gridX = Math.floor((realX - gridLeft) / CHARSIZE);\r\n            if (gridX % 2 != 0) return false; // Not near the bar\r\n            gridX /= 2;\r\n            const gridY = Math.floor((realY - gridTop) / HALFCHARSIZE);\r\n\r\n            // Consider G-Clef and repeat head area\r\n            if (s.appState.curPos == 0 && gridX < 2 || s.appState.curPos == 1 && gridX == 0)\r\n                return false;\r\n            else\r\n                return [gridX, gridY];\r\n        }\r\n    }\r\n}\r\n\r\nexport default UI;","import { SoundEntity } from \"./sound\";\r\nimport { App, InstrumentChordRecord, MarioSequencerSong, Mp3UpdateEvent } from \"app.types\";\r\nimport { MarioSequencer } from \"app\";\r\n\r\n/* \r\n    This file handles Audio Export for the sequencer. \r\n    Important information to consider:\r\n\r\n    Framerate of is assumed 60fps\r\n    TEMPO is in BPM (beats per min)\r\n\r\n    1 frame = 1/ 60\r\n    Beats per Second = TEMPO / 60\r\n    Seconds per each beat = 60 / TEMPO\r\n\r\n*/\r\n\r\n/**\r\n * Not currently used but can be used to get the duration of an AudioBufferSourceNode\r\n * @param sourceNode AudioBufferSourceNode (must have buffer set to return a duration)\r\n * @returns Duration in seconds\r\n */\r\nfunction getSourceNodeDuration(sourceNode: AudioBufferSourceNode): number {\r\n  const { buffer, playbackRate } = sourceNode;\r\n  if (!buffer) return 0;\r\n  return buffer.length / (buffer.sampleRate * playbackRate.value);\r\n}\r\n\r\n/**\r\n * Converts an array of notes encoded with instrument and scale information to a dictionary-style list of instruments and notes to be played\r\n * @param beatNotes A note array representing a single beat from the score\r\n * @returns A dictionary-like object where key is the instrument number, and value is an array of notes to be played at the same time\r\n */\r\nfunction beatToInstrumentChords(beatNotes: (string | number)[]) {\r\n  const beatChords: InstrumentChordRecord = {};\r\n  beatNotes.forEach((note, i) => {\r\n    if (typeof note === \"string\") return;\r\n    const instrumentNum = note >> 8;\r\n    const noteValue = note & 0xFF;\r\n    if (!beatChords[instrumentNum]) {\r\n      beatChords[instrumentNum] = [noteValue];\r\n    } else {\r\n      beatChords[instrumentNum].push(noteValue);\r\n    }\r\n  });\r\n  return beatChords;\r\n}\r\n\r\n/**\r\n * Generates a silent AudioBuffer at a specific length, used to \r\n * insert silence in to the generated audio when no notes are played on a given beat\r\n * @param context AudioContext to be used to generate silence\r\n * @param durationInSeconds Duration of silence\r\n * @returns Silent AudioBuffer for the duration specified\r\n */\r\nfunction createSilentBuffer(context: OfflineAudioContext, durationInSeconds: number): AudioBuffer {\r\n  const buffer = context.createBuffer(1, durationInSeconds * context.sampleRate, context.sampleRate);\r\n  for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\r\n    const data = buffer.getChannelData(channel);\r\n    for (let i = 0; i < data.length; i++) {\r\n      data[i] = 0; // Set all samples to 0 (silence)\r\n    }\r\n  }\r\n  return buffer;\r\n}\r\n\r\n/**\r\n * Generates chords for instruments that are played on each beat, outputting them to an AudioBuffer using OfflineAudioContext \r\n * @param sounds Sounds loaded by the app\r\n * @param chords Object containing the notes played simultaneously by each instrument on each beat\r\n * @param lengthInSecs Duration that sound should play for (varies by song Tempo)\r\n * @returns AudioBuffer for an entire song beat\r\n */\r\nasync function getChordBuffer(app: MarioSequencer, chords: InstrumentChordRecord, nextChords: InstrumentChordRecord, lengthInSecs: number, beatCount: number, totalBeats: number) {\r\n\r\n  const { SOUNDS: sounds } = app.ASSETS;\r\n\r\n  // Before we generate any sounds for the current beat\r\n  // we need to know if the next beat is silent or not. \r\n  // Instrument samples can be longer than the time available, if\r\n  // they are allowed to play in to the next beat it can sound messy,\r\n  // but if we cut them off and nothing plays on the next beat\r\n  // that's jarring too. \r\n\r\n  /** \r\n   * Reducer function to transform an Instrument Chord dictionary\r\n   * in to an array of unique notes played on the current/next beat\r\n   */\r\n  const reduceNotes = (chordObj: InstrumentChordRecord) => {\r\n    return (prev: number[], cur: string, idx: number, arr: string[]) => {\r\n      const instrumentNotes = chordObj[parseInt(cur, 10)];\r\n      instrumentNotes.forEach((note) => {\r\n        if (prev.indexOf(note) < 0) prev.push(note);\r\n      });\r\n      return prev;\r\n    };\r\n  }\r\n  const notes = Object.keys(chords).reduce(reduceNotes(chords), [] as number[]);\r\n  const nextNotes = Object.keys(nextChords).reduce(reduceNotes(nextChords), [] as number[]);\r\n\r\n  // By default we will restrict the length of all sounds on this beat\r\n  // to the correct length for TEMPO\r\n  let restrictLength = true;\r\n\r\n  // If the next beat is a rest beat, we can let current samples\r\n  // play out fully\r\n  notes.forEach((note) => {\r\n    if (nextNotes.length === 0) {\r\n      restrictLength = false;\r\n    }\r\n  });\r\n\r\n  // Get a reference to all instrument sounds needed for this beat\r\n  const instrumentNums = Object.keys(chords).map((i) => parseInt(i, 10));\r\n  let longestSound: number = 0;\r\n  const buffers: Record<number, AudioBuffer> =\r\n    instrumentNums.reduce((prev, cur, idx, arr) => {\r\n      const instrumentBuffer = sounds[cur].buffer;\r\n      if (instrumentBuffer && instrumentBuffer.duration > longestSound) longestSound = instrumentBuffer.duration;\r\n      if (instrumentBuffer && !prev[cur]) prev[cur] = instrumentBuffer;\r\n      return prev;\r\n    }, {} as Record<number, AudioBuffer>);\r\n\r\n  // Setup AudioContext at set duration\r\n  const context = new OfflineAudioContext(2, 44100 * (restrictLength ? lengthInSecs : longestSound), 44100);\r\n  context.addEventListener(\"complete\", (ev) => {\r\n    const evt = new Event(\"mp3update\") as Mp3UpdateEvent;\r\n    evt.data = {\r\n      type: \"chordGenUpdate\",\r\n      value: beatCount / totalBeats\r\n    }\r\n    app.container.dispatchEvent(evt);\r\n  });\r\n  const destination = context.destination;\r\n  const semitoneRatio = Math.pow(2, 1 / 12);\r\n  const diff = [14, 12, 11, 9, 7, 6, 4, 2, 0, -1, -3, -5, -6];\r\n\r\n  // for each instrument\r\n  instrumentNums.forEach((instrumentNum) => {\r\n    const notes = chords[instrumentNum];\r\n\r\n    // for each note, add an audio source\r\n    // the instrument pitched to the right note \r\n    notes.forEach((note) => {\r\n      const source = context.createBufferSource();\r\n      const scale = note & 0x0F;\r\n      let semitone = diff[scale];\r\n      if ((note & 0x80) != 0) semitone++;\r\n      else if ((note & 0x40) != 0) semitone--;\r\n      source.buffer = buffers[instrumentNum];\r\n      source.playbackRate.value = Math.pow(semitoneRatio, semitone);\r\n      source.connect(destination);\r\n      source.start(0);\r\n\r\n      // If any instrument in the next beat plays this same note,\r\n      // we need to silence this note at the correct time\r\n      // if (nextNotes.indexOf(note) >= 0) {\r\n      //   source.stop(Math.ceil(lengthInSecs));\r\n      // }\r\n    });\r\n  });\r\n\r\n  // return this chord\r\n  return await context.startRendering();\r\n}\r\n\r\n/**\r\n * Exports a Mario Paint Sequencer song to MP3. Does not currently support dynamic Tempo changes that may be present in some MSQ files.\r\n * @param worker A reference to the web worker\r\n * @param sounds Instrument sounds currently loaded by the app\r\n * @param tempo The song Tempo\r\n * @param score The song itself. An array of beats, each containing an array of instrument notes.\r\n */\r\nexport async function songToAudio(app: MarioSequencer) {\r\n  const { curScore: song } = app.appState;\r\n  const { notes: score, end, tempo } = song;\r\n\r\n  // Setup timing (examples in comments)\r\n  const bps = Number(tempo) / 60; // 287bpm / 60 = 4.7833333333\r\n  const noBeats = end; // 96 beats\r\n  const seconds = noBeats / bps; // ~20 seconds\r\n  const singleBeatSeconds = seconds / noBeats; // ~.208 seconds for a single beat\r\n\r\n  // OfflineAudioContext to generate sound buffer without outputting to speakers\r\n  const context = new OfflineAudioContext(2, 44100 * seconds, 44100);\r\n  \r\n  // In order to fake a progress-like event for the OfflineAudioContext renderer\r\n  // we can tell it to suspend for every 2 seconds of audio rendering\r\n  // and use the onstatechange to post back rendering progress to the page\r\n  for (let i = 0; i < seconds; i += 2) {\r\n    context.suspend(i);\r\n  }\r\n  context.onstatechange = function (e: Event) {\r\n    if (context.state === \"suspended\") {\r\n      const evt = new Event(\"mp3update\") as Mp3UpdateEvent;\r\n      evt.data = {\r\n        type: \"songProgressUpdate\",\r\n        value: context.currentTime / seconds\r\n      };\r\n      app.container.dispatchEvent(evt);\r\n      context.resume();\r\n    }\r\n  }\r\n  // When this fires, rendering is complete but the page still has to \r\n  // generate a Blob URL and attach the Audio element to the page\r\n  context.oncomplete = function (e: Event) {\r\n    const evt = new Event(\"mp3update\") as Mp3UpdateEvent;\r\n      evt.data = {\r\n        type: \"songProgressUpdate\",\r\n        value: 1\r\n      };\r\n      app.container.dispatchEvent(evt);\r\n  }\r\n  const destination = context.destination;\r\n\r\n  const chords = score.map((beat) => beatToInstrumentChords(beat));\r\n\r\n  // For each beat, merge all chords / instrument sounds, or \r\n  // play silence if necessary\r\n  for (let i = 0; i < end; i++) {\r\n    const beat = score[i];\r\n\r\n    let beatBuffer: AudioBuffer;\r\n    if (beat.length === 0) {\r\n      // No notes, output silence\r\n      //beatBuffer = createSilentBuffer(context, singleBeatSeconds);\r\n      continue;\r\n    } else {\r\n      // Get merged AudioBuffer representing all sounds played on this beat\r\n      beatBuffer = await getChordBuffer(app, chords[i], chords[i + 1], singleBeatSeconds, i + 1, end);\r\n    }\r\n\r\n    // Create source node\r\n    const source = context.createBufferSource();\r\n    source.buffer = beatBuffer;\r\n    source.connect(destination);\r\n\r\n    // Set timing of this beat / sound and output\r\n    source.start(i * singleBeatSeconds);\r\n  }\r\n\r\n  // Output all beats to a single song AudioBuffer\r\n  const songBuffer = await context.startRendering();\r\n\r\n  // Generate MP3 as Blob URL\r\n  const blob = new Blob([await audioBufferToMp3(songBuffer)], { type: 'audio/mp3' });\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  return url;\r\n}\r\n\r\n/**\r\n * LameJS' Mp3Encoder.encodeBuffer method expects each channel to be of type Int16Array. \r\n * AudioBuffer.getChannelData returns Float32Array. This method can be used to convert between the two.\r\n * @param buffer Float32Array returned by AudioBuffer.getChannelData\r\n * @returns Int16Array suitable for Mp3Encoder.encodeBuffer\r\n */\r\nfunction convertFloat32ToInt16(buffer: Float32Array): Int16Array {\r\n  const int16Buffer = new Int16Array(buffer.length);\r\n  for (let i = 0; i < buffer.length; i++) {\r\n    const floatVal = buffer[i];\r\n    const intVal = floatVal * 0x7fff; // convert float to signed 16-bit integer\r\n    int16Buffer[i] = intVal < 0 ? intVal + 0x10000 : intVal; // handle two's complement representation\r\n  }\r\n  return int16Buffer;\r\n}\r\n\r\n/**\r\n * Given an AudioBuffer object, returns an MP3 Blob object\r\n * @param audioBuffer Song in AudioBuffer format\r\n * @returns Mp3 Blob\r\n */\r\nfunction audioBufferToMp3(audioBuffer: AudioBuffer): Promise<Blob> {\r\n  return new Promise(async (resolve) => {\r\n    // Lazy load LameJS to save on bundle size\r\n    const ljs = await import(\"lamejs\");\r\n\r\n    const mp3Encoder = new ljs.Mp3Encoder(audioBuffer.numberOfChannels, audioBuffer.sampleRate, 128);\r\n    const samples = convertFloat32ToInt16(audioBuffer.getChannelData(0)).length;\r\n    const sampleBlockSize = 1152; // This value is fixed in the MP3 format\r\n    const mp3Data: Int8Array[] = [];\r\n\r\n    // Iterate through all samples, pushing an encoded stereo buffer to the mp3Data array \r\n    for (let i = 0; i < samples; i += sampleBlockSize) {\r\n      const left = convertFloat32ToInt16(audioBuffer.getChannelData(0)).subarray(i, i + sampleBlockSize);\r\n      const right = audioBuffer.numberOfChannels === 2 ? convertFloat32ToInt16(audioBuffer.getChannelData(1)).subarray(i, i + sampleBlockSize) : left;\r\n      const mp3Block = mp3Encoder.encodeBuffer(left, right);\r\n      if (mp3Block.length > 0) {\r\n        mp3Data.push(mp3Block);\r\n      }\r\n    }\r\n\r\n    // Convert to Blob\r\n    const mp3Blob = new Blob(mp3Data, { type: 'audio/mp3' });\r\n    resolve(mp3Blob);\r\n  });\r\n}","// CanvasRecorder.js - smusamashah\r\n// To record canvas effitiently using MediaRecorder\r\n// https://webrtc.github.io/samples/src/content/capture/canvas-record/\r\n\r\nimport { MarioSequencer } from \"app\";\r\n\r\nexport class CanvasRecorder {\r\n    private _app: MarioSequencer;\r\n    private _vbps?: number;\r\n    private stream: MediaStream;\r\n    private recordedBlobs: Blob[] = [];\r\n    private supportedType?: string;\r\n    private mediaRecorder: MediaRecorder | null = null;\r\n    private video: HTMLVideoElement;\r\n    constructor(app: MarioSequencer, canvas: HTMLCanvasElement, video_bits_per_sec?: number) {\r\n        this.handleDataAvailable = this.handleDataAvailable.bind(this);\r\n        this.handleStop = this.handleStop.bind(this);\r\n\r\n        this._app = app;\r\n        this._vbps = video_bits_per_sec;\r\n        this.video = document.createElement('video');\r\n        this.video.style.display = 'none';\r\n        \r\n        this.stream = canvas.captureStream();\r\n        if (typeof this.stream == undefined || !this.stream) {\r\n            return;\r\n        }\r\n    }\r\n    public start() {\r\n        if (!this._app.MSDestination) this._app.MSDestination = this._app.AC.createMediaStreamDestination();\r\n\r\n        let types = [\r\n            \"video/webm\",\r\n            'video/webm,codecs=vp9',\r\n            'video/vp8',\r\n            \"video/webm\\;codecs=vp8\",\r\n            \"video/webm\\;codecs=daala\",\r\n            \"video/webm\\;codecs=h264\",\r\n            \"video/mpeg\"\r\n        ];\r\n\r\n        for (let i in types) {\r\n            if (MediaRecorder.isTypeSupported(types[i])) {\r\n                this.supportedType = types[i];\r\n                break;\r\n            }\r\n        }\r\n        if (this.supportedType == null) {\r\n            console.log(\"No supported type found for MediaRecorder\");\r\n        }\r\n        let options = { \r\n            mimeType: this.supportedType,\r\n            videoBitsPerSecond: this._vbps || 2500000, // 2.5Mbps,\r\n            audioBitsPerSecond: this._vbps || 2500000\r\n        };\r\n\r\n        this.recordedBlobs = [];\r\n        try {\r\n            const mediaStream = new MediaStream();\r\n            mediaStream.addTrack(this.stream.getVideoTracks()[0]);\r\n            mediaStream.addTrack(this._app.MSDestination.stream.getAudioTracks()[0]);\r\n            this.mediaRecorder = new MediaRecorder(mediaStream, options);\r\n        } catch (e) {\r\n            alert('MediaRecorder is not supported by this browser.');\r\n            console.error('Exception while creating MediaRecorder:', e);\r\n            return;\r\n        }\r\n\r\n        console.log('Created MediaRecorder', this.mediaRecorder, 'with options', options);\r\n        this.mediaRecorder.onstop = this.handleStop;\r\n        this.mediaRecorder.ondataavailable = this.handleDataAvailable;\r\n        this.mediaRecorder.start(100); // collect 100ms of data blobs\r\n        console.log('MediaRecorder started', this.mediaRecorder);\r\n    }\r\n    public stop() {\r\n        this.mediaRecorder?.stop();\r\n        console.log('Recorded Blobs: ', this.recordedBlobs);\r\n        this.video.controls = true;\r\n    }\r\n    public save(filename: string) {\r\n        const name = filename || 'recording.webm';\r\n        const blob = new Blob(this.recordedBlobs, { type: this.supportedType });\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.style.display = 'none';\r\n        a.href = url;\r\n        a.download = name;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        setTimeout(() => {\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);\r\n        }, 100);\r\n    }\r\n    private handleDataAvailable(event: BlobEvent) {\r\n        if (event.data && event.data.size > 0) {\r\n            this.recordedBlobs.push(event.data);\r\n        }\r\n    }\r\n    private handleStop(event: Event) {\r\n        console.log('Recorder stopped: ', event);\r\n        const superBuffer = new Blob(this.recordedBlobs, { type: this.supportedType });\r\n        this.video.src = window.URL.createObjectURL(superBuffer);\r\n    }\r\n    \r\n}\r\n","import {\r\n    App,\r\n    BeatButton,\r\n    GameStatus,\r\n    IMarioSequencerAssets,\r\n    IMarioSequencerProps,\r\n    InstrumentButton,\r\n    ISequencerBtnCreationArgs,\r\n    MarioSequencerAppState,\r\n    MarioSequencerSong,\r\n    Mp3UpdateEvent,\r\n    SequencerBtnEvent,\r\n    SequencerButton,\r\n    SequencerSlider,\r\n    ToggleButton\r\n} from \"./app.types\";\r\nimport { SoundEntity, SoundManager } from \"./sound\";\r\nimport EasyTimer from \"./timer\";\r\nimport EmbeddedSongs from \"./songs\";\r\nimport { Mario } from \"./mario\";\r\nimport UI from \"./ui\";\r\nimport Utils from \"./utils\";\r\n\r\nimport styles from \"./app.module.scss\";\r\nimport { AddEvents, EmitClickEvent } from \"./eventHandling\";\r\nimport { songToAudio } from \"./mp3export\";\r\nimport { CanvasRecorder } from \"./recorder\";\r\n\r\n// Ensure all assets are bundled as necessary\r\nfunction requireAll(r: any) { r.keys().forEach(r); }\r\nrequireAll(require.context('../public/wav', true, /\\.wav$/));\r\nrequireAll(require.context('../public/image', true, /\\.png$/));\r\nrequire('../public/gh-fork-ribbon.css');\r\n\r\n// Service worker for cached offline loading\r\nif ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n        navigator.serviceWorker.register('/service-worker.js').then(registration => {\r\n            console.log('SW registered: ', registration);\r\n        }).catch(registrationError => {\r\n            console.log('SW registration failed: ', registrationError);\r\n        });\r\n    });\r\n}\r\n\r\n// Shim for RAF\r\nwindow.requestAnimFrame = (function () {\r\n    return window.requestAnimationFrame ||\r\n        (window as any).webkitRequestAnimationFrame ||\r\n        (window as any).mozRequestAnimationFrame ||\r\n        (window as any).oRequestAnimationFrame ||\r\n        (window as any).msRequestAnimationFrame ||\r\n        function (callback) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n})();;\r\n\r\nexport class MarioSequencer {\r\n\r\n    /** UI Loader - UI setup kept separate from rest of app logic */\r\n    private ui: UI.Loader;\r\n\r\n    private soundManager: SoundManager;\r\n\r\n    /** Moustachioed plumber and hero of the Mushroom Kingdom */\r\n    public mario?: Mario;\r\n\r\n    /** Web AudioContext, used for audio playback */\r\n    public AC: AudioContext = (window.AudioContext) ? new AudioContext() : new window.webkitAudioContext();\r\n\r\n    public MSDestination: MediaStreamAudioDestinationNode | null = null;\r\n\r\n    /** Layer 1 Canvas - for rendering of Mario Paint composer background / UI elements */\r\n    public Layer1?: HTMLCanvasElement;\r\n\r\n    /** Layer 2 Canvas - for rendering of Mario Paint composer score and mario etc */\r\n    public Layer2?: HTMLCanvasElement;\r\n\r\n    /** Layer 1 Rendering Context (2D) */\r\n    public L1C: CanvasRenderingContext2D | null = null;\r\n\r\n    /** Layer 2 Rendering Context (2D) */\r\n    public L2C: CanvasRenderingContext2D | null = null;\r\n\r\n    /** HTML Container for the app */\r\n    public container: HTMLElement;\r\n\r\n    /** App state */\r\n    public appState: MarioSequencerAppState = {\r\n        mouseX: 0,\r\n        mouseY: 0,\r\n        keyPresses: [],\r\n        animeId: 0,\r\n        resizing: false,\r\n        currentTool: 0,\r\n        curPos: 0,\r\n        curScore: {\r\n            beats: 4,\r\n            end: 0,\r\n            loop: false,\r\n            notes: [],\r\n            tempo: \"0\"\r\n        },\r\n        history: [],\r\n        gameStatus: GameStatus.Edit\r\n    }\r\n\r\n    /** Stores any parameters/options passed to the app using the URL Query String */\r\n    private _urlOptions: Record<string, any> = {};\r\n\r\n    /** Maximum number of bars in score */\r\n    public curMaxBars: number;\r\n\r\n    private _maxHistory: number = 10;\r\n\r\n    /** App constants - updated on window resize */\r\n    public CONST: IMarioSequencerProps;\r\n\r\n    /** Image assets, sound assets and button references */\r\n    public ASSETS: IMarioSequencerAssets = {\r\n        BUTTONS: [],\r\n        SOUNDS: [],\r\n    };\r\n\r\n    /** Timers used by the app to facilitate certain sprite animations */\r\n    public TIMERS: Record<string, EasyTimer> = {};\r\n\r\n    /** External Utils */\r\n    private getConstants: (this: MarioSequencer, opts: any, container: HTMLElement) => IMarioSequencerProps;\r\n\r\n    /** Canvas recorder for video recording */\r\n    public canvasRecorder: CanvasRecorder | null = null;\r\n\r\n    /**\r\n     * A new Mario Paint Sequencer\r\n     * @param containerSelector The container in which to draw the game\r\n     */\r\n    constructor(containerSelector: string) {\r\n\r\n        // Class fn bindings\r\n        this.getConstants = Utils.getConstants.bind(this);\r\n\r\n        this.doAnimation = this.doAnimation.bind(this);\r\n        this.doMarioEnter = this.doMarioEnter.bind(this);\r\n        this.doMarioLeave = this.doMarioLeave.bind(this);\r\n        this.doMarioPlay = this.doMarioPlay.bind(this);\r\n        this._downloadJSON = this._downloadJSON.bind(this);\r\n        this._downloadMP3 = this._downloadMP3.bind(this);\r\n\r\n        const sequencer = this;\r\n        this.ui = new UI.Loader(this);\r\n        this.soundManager = new SoundManager(this);\r\n\r\n        const containerEl = document.querySelector(containerSelector) as App;\r\n        if (containerEl) {\r\n            const initialMagnify = Utils.getScaledMagnify();\r\n            containerEl.addEventListener(\"mp3update\", this._onMp3Update);\r\n            containerEl.classList.add(styles.marioSequencer);\r\n            containerEl.style.setProperty('--scaledMagnify', initialMagnify.toString());\r\n\r\n            // Get manual options from URL / Search String\r\n            window.location.search.substr(1).split('&').forEach((s) => {\r\n                const tmp = s.split('=');\r\n                this._urlOptions[tmp[0]] = tmp[1];\r\n            });\r\n\r\n            // Set constants based on set options\r\n            this.CONST = this.getConstants(this._urlOptions, containerEl);\r\n            this.curMaxBars = this.CONST.DEFAULTMAXBARS;\r\n            this.container = containerEl;\r\n\r\n            // Resize UI option event listener\r\n            const b = document.getElementById(\"magnify\") as HTMLSelectElement;\r\n            b.addEventListener(\"change\", (e) => {\r\n                let mag = (e.target as HTMLSelectElement).selectedIndex + 1;\r\n                this._resizeScreen(mag);\r\n            });\r\n\r\n            // Respond to resize events if magnifaction is set to \"Scale\"\r\n            window.addEventListener(\"resize\", () => {\r\n                const select = document.getElementById('magnify') as HTMLSelectElement;\r\n                if (select) {\r\n                    const magIdx = select.selectedIndex + 1;\r\n                    this._resizeScreen(magIdx);\r\n                }\r\n            });\r\n\r\n            // Score download\r\n            const downloadJSONBtn = document.querySelector('button#dlJSON');\r\n            if (downloadJSONBtn) {\r\n                downloadJSONBtn.addEventListener(\"click\", this._downloadJSON);\r\n            }\r\n            const downloadMP3Btn = document.querySelector('button#dlMP3');\r\n            if (downloadMP3Btn) {\r\n                downloadMP3Btn.addEventListener(\"click\", this._downloadMP3);\r\n            }\r\n            const backBtn = document.querySelector('button#dismissDL');\r\n            if (backBtn) {\r\n                backBtn.addEventListener(\"click\", () => {\r\n                    document.querySelector('audio#export')?.remove();\r\n                    document.querySelector('.downloadOpts')?.classList.remove('rendering', 'dlReady');\r\n                });\r\n            }\r\n\r\n            // Sharing\r\n            document.getElementById('shareLink')?.addEventListener('click', (e) => {\r\n                const url = document.getElementById('shareUrl') as HTMLInputElement;\r\n                (document.getElementById('inclSong') as HTMLInputElement).checked = false;\r\n                url.value = window.location.href;\r\n            });\r\n            document.getElementById('inclSong')?.addEventListener('click', function(e) {\r\n                const url = document.getElementById('shareUrl') as HTMLInputElement; \r\n                let port = window.location.port;\r\n                let urlVal = `${window.location.protocol}//${window.location.hostname}${port !== \"80\" ? \":\" + port : \"\"}${window.location.pathname}`;\r\n                if ((this as HTMLInputElement).checked) {\r\n                    const bars = sequencer.appState.curScore.notes;\r\n                    let s = \"\";\r\n                    bars.forEach((bar) => {\r\n                        // MSQ parsing code expects 3 notes max per bar\r\n                        for (let i = 0; i <= Math.min(bar.length,2); i++) {\r\n                            const note = bar[i] as number;\r\n                            if (!note) {\r\n                                s += [...Array(2-i+1)].reduce((prev,cur) => prev + \"0\", \"\");\r\n                            } else {\r\n                                const scale = (note & 0xff) + 1;\r\n                                const tone = ((note >> 8) & 0xff) + 1;\r\n                                s += scale.toString(16);\r\n                                if (scale > 0) s += tone.toString(16);\r\n                            }\r\n                        }\r\n                        s += '\\r';\r\n                    });\r\n                    urlVal += `?S=${s}&T=${sequencer.appState.curScore.tempo}&L=${sequencer.appState.curScore.loop ? 'T' : 'F'}&E=${sequencer.appState.curScore.end}&B=${sequencer.appState.curScore.beats === 4 ? \"T\" : \"F\"}`;\r\n                } \r\n                url.value = urlVal;\r\n            });\r\n            document.getElementById('shareCopy')?.addEventListener('click', (e) => {\r\n                const url = document.getElementById('shareUrl') as HTMLInputElement; \r\n                url.select(); \r\n                url.setSelectionRange(0,99999); \r\n                navigator.clipboard.writeText(url.value);\r\n            });\r\n\r\n            // Setup UI\r\n            this.soundManager.loadSounds().then(() => {\r\n                this.ui.init().then(() => {\r\n\r\n                    if (this.Layer2) this.canvasRecorder = new CanvasRecorder(this, this.Layer2);\r\n\r\n                    AddEvents(this);\r\n\r\n                    // Remove loading 'spinner'\r\n                    const spinner = document.getElementById(\"spinner\");\r\n                    if (spinner) {\r\n                        this.container.removeChild(spinner);\r\n                    }\r\n\r\n                    // Action any URL params\r\n                    this._actionUrlParams();\r\n\r\n                });\r\n            });\r\n        } else {\r\n            throw new Error(`Unable to find selector: ${containerSelector}`);\r\n        }\r\n    }\r\n\r\n    private _actionUrlParams() {\r\n        const OPTS = this._urlOptions;\r\n        const sequencer = this;\r\n        try {\r\n            if (Object.keys(OPTS).length == 0) return;\r\n\r\n            if (OPTS['url'] != undefined) {\r\n\r\n                this.resetScore();\r\n                const url = OPTS['url'];\r\n\r\n                // Load url\r\n                new Promise(function (resolve, reject) {\r\n                    const req = new XMLHttpRequest();\r\n                    req.open('GET', url);\r\n                    req.onload = function () {\r\n                        if (req.status == 200) {\r\n                            resolve(req.response);\r\n                        } else {\r\n                            reject(Error(req.statusText));\r\n                        }\r\n                    };\r\n\r\n                    req.onerror = function () {\r\n                        reject(Error(\"Network Error\"));\r\n                    };\r\n\r\n                    req.send();\r\n                }).then(function (response) {\r\n\r\n                    // Parse response as MSQ or Sequencer JSON\r\n                    let msq = false;\r\n                    if (url.slice(-3) == \"msq\") {\r\n                        sequencer.addMSQ(response as string);\r\n                    } else {\r\n                        sequencer.addJSON(response as string);\r\n                    }\r\n\r\n                    sequencer._reInitButtonsFromScore();\r\n\r\n                    sequencer._autoPlayIfDemanded(OPTS);\r\n\r\n                }).catch(function (err) {\r\n                    alert(\"Downloading File: \" + url + \" failed :\" + err);\r\n                    console.error(\"Downloading File: \" + url + \" failed :\" + err.stack);\r\n                });\r\n\r\n            } else if (OPTS.S != undefined || OPTS.SCORE != undefined) {\r\n\r\n                // Song passed in as Query String param\r\n                const score = OPTS.SCORE || OPTS.S;\r\n                const tempo = OPTS.TEMPO || OPTS.T;\r\n                let loop = (OPTS.LOOP || OPTS.L);\r\n                const end = OPTS.END || OPTS.E;\r\n                let beats = (OPTS.TIME44 || OPTS.B);\r\n\r\n                if (tempo == undefined || loop == undefined || end == undefined ||\r\n                    beats == undefined) {\r\n                    throw new Error(\"Not enough parameters\");\r\n                }\r\n\r\n                loop = loop.toUpperCase();\r\n                beats = beats.toUpperCase();\r\n\r\n                const text = \"SCORE=\" + score + \"\\n\" +\r\n                    \"TEMPO=\" + tempo + \"\\n\" +\r\n                    \"LOOP=\" + ((loop == \"T\" || loop == \"TRUE\") ? \"TRUE\" : \"FALSE\") + \"\\n\" +\r\n                    \"END=\" + end + \"\\n\" +\r\n                    \"TIME44=\" + ((beats == \"T\" || beats == \"TRUE\") ? \"TRUE\" : \"FALSE\");\r\n\r\n                sequencer.resetScore();\r\n                sequencer.addMSQ(text);\r\n                sequencer._reInitButtonsFromScore();\r\n\r\n                sequencer._autoPlayIfDemanded(OPTS);\r\n            }\r\n        } catch (err: unknown) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets music score\r\n     */\r\n    public resetScore() {\r\n        this.appState.curScore.notes = [];\r\n        this.curMaxBars = 0;\r\n        this.appState.curScore.beats = 4;\r\n        // Loop button itself has a state, so keep current value;\r\n        // CurScore.loop = false;\r\n        this.appState.curScore.end = 0;\r\n        this.appState.curScore.tempo = 0;\r\n    }\r\n\r\n    /**\r\n     * Initialises the music / score\r\n     */\r\n    public initMusicScore() {\r\n        const { DEFAULTMAXBARS, DEFAULTTEMPO } = this.CONST;\r\n        const tmpa = [];\r\n        for (let i = 0; i < DEFAULTMAXBARS; i++) tmpa[i] = [];\r\n        this.appState.curScore.notes = tmpa;\r\n        this.curMaxBars = DEFAULTMAXBARS;\r\n        const s = document.getElementById(\"scroll\") as SequencerSlider;\r\n        s.max = (DEFAULTMAXBARS - 6).toString();\r\n        s.value = \"0\";\r\n        this.appState.curScore.loop = false;\r\n        (document.getElementById(\"loop\") as ToggleButton)?.reset();\r\n        this.appState.curScore.end = DEFAULTMAXBARS - 1;\r\n        this.appState.curScore.tempo = DEFAULTTEMPO;\r\n        const tempoInput = document.getElementById(\"tempo\") as SequencerSlider;\r\n        if (tempoInput) tempoInput.value = DEFAULTTEMPO.toString();\r\n        this.appState.curScore.beats = 4;\r\n        const e = new Event(\"click\");\r\n        (e as any).soundOff = true;\r\n        const beatBtn = document.getElementById(\"4beats\") as ToggleButton;\r\n        if (beatBtn) beatBtn.dispatchEvent(e);\r\n    }\r\n\r\n    private _reInitButtonsFromScore() {\r\n        const b = document.getElementById(this.appState.curScore.beats == 3 ? '3beats' : '4beats') as HTMLButtonElement;\r\n        const e = new Event(\"click\");\r\n        (e as any).soundOff = true;\r\n        b.dispatchEvent(e);\r\n\r\n        const r = document.getElementById('scroll') as HTMLInputElement;\r\n        this.curMaxBars = this.appState.curScore.end + 1;\r\n        r.max = (this.curMaxBars - 6).toString();\r\n        r.value = \"0\";\r\n        this.appState.curPos = 0;\r\n\r\n        const tempoRange = document.getElementById(\"tempo\") as HTMLInputElement;\r\n        let tempo = this.appState.curScore.notes[0][0];\r\n        if (typeof tempo == \"string\" && tempo.substr(0, 5) == \"TEMPO\") {\r\n            tempo = tempo.split(\"=\")[1];\r\n            this.appState.curScore.tempo = tempo;\r\n            tempoRange.value = tempo;\r\n        }\r\n    }\r\n\r\n    public addMSQ(text: string) {\r\n        const lines = text.split(/\\r\\n|\\r|\\n/);\r\n        const keyword = [\"SCORE\", \"TEMPO\", \"LOOP\", \"END\", \"TIME44\"];\r\n        const values: any = {};\r\n        lines.forEach(function (line, i) {\r\n            if (line === \"\") return;\r\n            const kv = line.split(\"=\");\r\n            const k = kv[0];\r\n            const v = kv[1];\r\n            if (i < keyword.length && k !== keyword[i]) {\r\n                throw new Error(\"Line \" + i + \" must start with '\" + keyword[i] + \"'\");\r\n            }\r\n            values[k] = v;\r\n        });\r\n\r\n        const oldEnd = this.appState.curScore.end;\r\n        const s = values.SCORE;\r\n        let i = 0, count = this.appState.curScore.end;\r\n        // MSQ format is variable length string.\r\n        out:\r\n        while (i < s.length) {\r\n            const bar = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                if (s[i] === \"\\r\" || s[i] == undefined) break out;\r\n                let scale = parseInt(s[i++], 16);\r\n                if (scale !== 0) {\r\n                    scale -= 1;\r\n                    const tone = parseInt(s[i++], 16) - 1;\r\n                    const note = (tone << 8) | scale;\r\n                    bar.push(note);\r\n                }\r\n            }\r\n            this.appState.curScore.notes[count++] = bar;\r\n        }\r\n\r\n        this.appState.curScore.end += parseInt(values.END) - 1;\r\n        if (this.appState.curScore.tempo != values.TEMPO)\r\n            this.appState.curScore.notes[oldEnd].splice(0, 0, \"TEMPO=\" + values.TEMPO);\r\n        this.appState.curScore.tempo = values.TEMPO;\r\n        const beats = (values.TIME44 == \"TRUE\") ? 4 : 3;\r\n        this.appState.curScore.beats = beats;\r\n        // click listener will set CurScore.loop\r\n        const b = document.getElementById(\"loop\") as ToggleButton;\r\n        (values.LOOP == \"TRUE\") ? b.set() : b.reset();\r\n    }\r\n\r\n    public addJSON(text: string) {\r\n        const json = JSON.parse(text);\r\n        for (let i = 0; i < json.end; i++)\r\n            this.appState.curScore.notes.push(json.notes[i]);\r\n\r\n        const notes = this.appState.curScore.notes[this.appState.curScore.end];\r\n        if (this.appState.curScore.tempo != json.tempo && notes.length != 0) {\r\n            const tempostr = notes[0];\r\n            if (typeof tempostr != \"string\") {\r\n                notes.splice(0, 0, \"TEMPO=\" + json.tempo);\r\n            }\r\n        }\r\n        this.appState.curScore.tempo = json.tempo;\r\n\r\n        this.appState.curScore.end += json.end;\r\n\r\n        const b = document.getElementById(\"loop\") as ToggleButton;\r\n        if (this.appState.curScore.loop) b.set; else b.reset();\r\n    }\r\n\r\n    public updateHistory() {\r\n        this.appState.history.push({ ...this.appState });\r\n        if (this.appState.history.length > this._maxHistory) {\r\n            this.appState.history = this.appState.history.slice(0 - this._maxHistory);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region draw functions\r\n\r\n    /**\r\n     * Draw the musical score for a given position\r\n     * @param pos The musical bar index / position in the score, usually incremented by Mario.play()\r\n     * @param notes The notes of the song\r\n     * @param scroll Used for Mario's position, helping to determine when Mario should jump and notes should bounce etc\r\n     */\r\n    public drawScore(pos: number, notes: (string | number)[][], scroll: number) {\r\n        const { CHARSIZE, HALFCHARSIZE, MAGNIFY, OFFSETLEFT, OFFSETTOP, SCRHEIGHT } = this.CONST;\r\n        const { IMAGES, SOUNDS } = this.ASSETS;\r\n        const SCREEN = this.Layer2;\r\n        if (this.mario && IMAGES && SCREEN && this.L1C && this.L2C) {\r\n\r\n            // Clip note area on X-axis, within score area (8,41 to 247,148)\r\n            this.L2C.clearRect(0, 0, SCREEN.width, SCREEN.height);\r\n            this.L2C.save();\r\n            this.L2C.rect(8 * MAGNIFY, 0, (247 - 8 + 1) * MAGNIFY, SCRHEIGHT * MAGNIFY);\r\n            this.L2C.clip();\r\n\r\n            // Get Grid Co-ordinates of mouse\r\n            const realX: number = this.appState.mouseX - OFFSETLEFT;\r\n            const realY: number = this.appState.mouseY - OFFSETTOP;\r\n            const g: boolean | number[] = this.ui.toGrid(realX, realY);\r\n            let gridX: number | undefined;\r\n            let gridY: number | undefined;\r\n\r\n            // Coordinates only needed in Edit mode\r\n            if (this.appState.gameStatus == GameStatus.Edit && g !== false) {\r\n                gridX = g[0];\r\n                gridY = g[1];\r\n                // If mouse cursor on or under the C, draw horizontal line\r\n                if (gridY >= 11) this._drawHorizontalBar(gridX, 0);\r\n            }\r\n\r\n            // If G-Clef should be drawn, draw it\r\n            if (this.ASSETS.IMAGES && pos == 0) {\r\n                const w = this.ASSETS.IMAGES.GClef.width;\r\n                const h = this.ASSETS.IMAGES.GClef.height;\r\n\r\n                this.L2C.drawImage(\r\n                    this.ASSETS.IMAGES.GClef,\r\n                    0, 0, w, h,\r\n                    (9 - scroll) * MAGNIFY,\r\n                    48 * MAGNIFY,\r\n                    w * MAGNIFY,\r\n                    h * MAGNIFY\r\n                );\r\n\r\n                // If song loops, draw repeat head\r\n                if (this.appState.curScore.loop) {\r\n                    this._drawRepeatHead(41 - scroll);\r\n                }\r\n                // If at position 1 and song loops, draw repeat head\r\n            } else if (pos == 1 && this.appState.curScore.loop) {\r\n                this._drawRepeatHead(9 - scroll);\r\n            }\r\n\r\n            const beats = this.appState.curScore.beats;\r\n\r\n            /** A vertical orange bar is drawn to demarcate each bar / measure in the score.\r\n             * Because we are scrolling and clipping the timeline as we edit or play the song, \r\n             * the positional indexes (relative to the left of the screen) at which we should \r\n             * draw these orange lines also changes.\r\n             * \r\n             * Because the G-Clef and Repeat Head take up the first two grid positions -  \r\n             * when pos is zero, we must draw each orange line (representing the start of a \r\n             * measure) at pos + 2, every N beats. N is 4 in 4/4, or 3 in 3/4.\r\n             * \r\n             * An orange line will be drawn on:\r\n             * \r\n             *    barBeingDrawn % beats == (beats - 1) - (pos+1 % beats)\r\n             * \r\n             * For an explanation of why this works, consider the scenario where the current\r\n             * position is 0, the current song is in 4/4, and the bar being drawn is 2nd from\r\n             * the left of the screen. \r\n             * \r\n             * 2 % 4 == (4-1) - (0 + 1 % 4) ... OR: \r\n             * \r\n             * 2 == 3 - 1  (which is true... so an orange bar will be drawn)\r\n             * \r\n             * The result of:\r\n             * \r\n             *    (beats - 1) - (position + 1 % beats)\r\n             * \r\n             * is:\r\n             * \r\n             *    2, 1, 0, 3, 2, 1, 0, 3, ..... (if beats = 4)\r\n             * \r\n             *    2, 1, 0, 2, 1, 0, 2, 1, ..... (if beats = 3)\r\n             */\r\n            const orange = (beats == 4) ? 3 - ((pos + 1) % 4) : 2 - ((pos + 3) % 3);\r\n\r\n\r\n            /* DRAW VERTICAL BARS:\r\n             * Iterate through the vertical drawing positions on the grid\r\n             * That run along the X-axis\r\n             */\r\n\r\n            /* If pos < 2, start with the 1st or 2nd bars as the G-Clef and \r\n             * Repeat Head take up the first two grid positions\r\n             */\r\n            let i = (pos < 2) ? (2 - pos) : 0;\r\n\r\n            // There are 9 drawable positions on the X-axis, using the game's grid system\r\n            for (; i < 9; i++) {\r\n                const xorg = 16 + 32 * i - scroll;\r\n                const x = xorg * MAGNIFY;\r\n\r\n                /** The bar in the entire score the current loop iteration i represents */\r\n                const barnum = pos + i - 2;\r\n\r\n                // If we are drawing the final bar, draw the Repeat symbol or End Mark\r\n                if (barnum == this.appState.curScore.end) {\r\n                    const img = this.appState.curScore.loop ? IMAGES.Repeat[1] : IMAGES.EndMark;\r\n                    this.L2C.drawImage(img, x - 7 * MAGNIFY, 56 * MAGNIFY);\r\n                }\r\n\r\n                // Draw vertical line on each beat\r\n                this.L2C.beginPath();\r\n                this.L2C.setLineDash([MAGNIFY, MAGNIFY]);\r\n                this.L2C.lineWidth = MAGNIFY;\r\n                if (i % beats == orange) {\r\n                    if (this.appState.gameStatus == GameStatus.Edit) this._drawBarNumber(i, barnum / beats + 1);\r\n                    this.L2C.strokeStyle = '#F89000'; // Orange\r\n                } else {\r\n                    this.L2C.strokeStyle = '#A0C0B0';\r\n                }\r\n                this.L2C.moveTo(x, 41 * MAGNIFY);\r\n                this.L2C.lineTo(x, 148 * MAGNIFY);\r\n                this.L2C.stroke();\r\n\r\n                /** Notes for the current beat */\r\n                const b = notes[barnum];\r\n\r\n                // If no notes to draw, skip \r\n                if (b == undefined) continue;\r\n\r\n                /* DRAW THE NOTES\r\n                 * Notes bounce as Mario jumps on them (visual feedback for the notes sounding out), \r\n                 * and because Mario is not always in the center of the screen - \r\n                 * he enters stage left, leaves stage right - we may need to position them accordingly\r\n                 */\r\n\r\n                /**\r\n                 * The amount by which the drawn character should drawn bouncing downward\r\n                 */\r\n                let bounceDelta = 0;\r\n\r\n                // If music is playing and Mario has already hit the beat being drawn...\r\n                if (this.appState.gameStatus == GameStatus.Playing && this.mario.pos - 2 == barnum) {\r\n                    /** Distance from Mario is used to determine the bounce */\r\n                    let idx;\r\n                    // If Mario is center screen\r\n                    if (this.mario.x == 120) {\r\n                        idx = (this.mario.scroll >= 16) ? this.mario.scroll - 16 : this.mario.scroll + 16;\r\n                    } else {\r\n                        idx = this.mario.x + 8 - xorg;\r\n                    }\r\n                    const tbl = [0, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8, 8,\r\n                        8, 8, 8, 8, 8, 7, 7, 6, 6, 5, 5, 4, 3, 3, 2, 1, 0];\r\n                    bounceDelta = tbl[Math.round(idx)];\r\n                }\r\n\r\n                /** Set to true when the current note is below middle C. Ensures a horizontal line is drawn behind the note. */\r\n                let hflag = false;\r\n\r\n                // For each note in the current beat\r\n                for (let j = 0; j < b.length; j++) {\r\n                    const bNote = b[j];\r\n                    if (typeof bNote === \"string\") continue; // for dynamic TEMPO\r\n\r\n                    const sndnum = bNote >> 8;\r\n                    const scale = bNote & 0x0F;\r\n\r\n                    // When CurChar is eraser, and the mouse cursor is on the note,\r\n                    // an Image of note blinks.\r\n                    if (this.appState.currentTool == 16 && g != false && i == gridX && scale == gridY &&\r\n                        this.TIMERS.eraser.currentFrame == 1) { continue; }\r\n\r\n                    if (!hflag && (scale >= 11)) {\r\n                        hflag = true;\r\n                        this._drawHorizontalBar(i, scroll);\r\n                    }\r\n\r\n                    // Draw instrument icon\r\n                    const soundImage = SOUNDS[sndnum].image;\r\n                    if (soundImage) {\r\n                        this.L2C.drawImage(soundImage, x - HALFCHARSIZE,\r\n                            (40 + scale * 8 + bounceDelta) * MAGNIFY);\r\n                    }\r\n\r\n                    // Draw flat or sharp symbol if appropriate\r\n                    const x2 = (x - 13 * MAGNIFY);\r\n                    const y = (44 + scale * 8 + bounceDelta) * MAGNIFY;\r\n                    if ((bNote & 0x80) != 0) {\r\n                        this.L2C.drawImage(IMAGES.Semitone[0], x2, y);\r\n                    } else if ((bNote & 0x40) != 0) {\r\n                        this.L2C.drawImage(IMAGES.Semitone[1], x2, y);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Draw red placeholder / cursor when in edit mode and hovering grid position\r\n            if (this.appState.gameStatus == GameStatus.Edit && gridX && gridY) {\r\n                this.L2C.beginPath();\r\n                this.L2C.setLineDash([7 * MAGNIFY, 2 * MAGNIFY, 7 * MAGNIFY, 0]);\r\n                this.L2C.lineWidth = MAGNIFY;\r\n                this.L2C.strokeStyle = '#F00';\r\n                const xorg = (16 + 32 * gridX - 8);\r\n                const x = xorg * MAGNIFY;\r\n                const y = (40 + gridY * 8) * MAGNIFY;\r\n                this.L2C.rect(x, y, CHARSIZE, CHARSIZE);\r\n                this.L2C.stroke();\r\n            }\r\n            this.L2C.restore();\r\n        }\r\n    }\r\n\r\n    private _drawHorizontalBar(gridX: number, scroll: number) {\r\n        const { HALFCHARSIZE, MAGNIFY } = this.CONST;\r\n        // X is the x of vertical bar (in grid)\r\n        const width = 24 * MAGNIFY;\r\n        this.L2C?.fillRect((4 + 32 * gridX - scroll) * MAGNIFY,\r\n            (38 + 11 * 8) * MAGNIFY + HALFCHARSIZE,\r\n            width, 2 * MAGNIFY);\r\n    }\r\n\r\n    private _drawRepeatHead(x: number) {\r\n        const { MAGNIFY } = this.CONST;\r\n        const { IMAGES } = this.ASSETS;\r\n        if (this.L2C && IMAGES) {\r\n            const w = IMAGES.Repeat[0].width;\r\n            const h = IMAGES.Repeat[0].height;\r\n            this.L2C.drawImage(IMAGES.Repeat[0], x * MAGNIFY, 56 * MAGNIFY);\r\n        }\r\n    }\r\n\r\n    public drawEndMarkIcon(img: HTMLImageElement) {\r\n        const { MAGNIFY } = this.CONST;\r\n        if (this.L1C) {\r\n            this.L1C.clearRect(4 * MAGNIFY, 8 * MAGNIFY, 16 * MAGNIFY, 14 * MAGNIFY);\r\n            this.L1C.drawImage(img, 5 * MAGNIFY, 8 * MAGNIFY);\r\n        }\r\n    }\r\n\r\n    private _drawBarNumber(gridX: number, barnum: number) {\r\n        const { MAGNIFY } = this.CONST;\r\n        const { IMAGES } = this.ASSETS;\r\n        if (IMAGES && this.L2C) {\r\n            let x = (16 + 32 * gridX) * MAGNIFY - 1;\r\n            const y = (40 - 7) * MAGNIFY;\r\n            const nums = [];\r\n            while (barnum > 0) {\r\n                nums.push(barnum % 10);\r\n                barnum = Math.floor(barnum / 10);\r\n            }\r\n            const len = nums.length;\r\n            if (len == 1) x += 2 * MAGNIFY;\r\n            while (nums.length > 0) {\r\n                const n = nums.pop();\r\n                if (n !== undefined) {\r\n                    const width = (n == 4) ? 5 : 4;\r\n                    this.L2C.drawImage(IMAGES.Numbers[n], x, y, 5 * MAGNIFY, 7 * MAGNIFY);\r\n                    x += width * MAGNIFY;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public drawEraserIcon() {\r\n        const { MAGNIFY } = this.CONST;\r\n        if (this.L1C) this.L1C.clearRect(4 * MAGNIFY, 8 * MAGNIFY, 16 * MAGNIFY, 14 * MAGNIFY);\r\n    }\r\n\r\n    public drawMario(marioImage: HTMLImageElement, x: number, y: number) {\r\n        const { MAGNIFY } = this.CONST;\r\n        const sequencer = this;\r\n        if (this.L2C) {\r\n            this.L2C.drawImage(marioImage, x * MAGNIFY, y * MAGNIFY);\r\n        }\r\n    }\r\n\r\n    public drawMarioSweat(marioImage: HTMLImageElement,\r\n        sx: number, sy: number, sw: number, sh: number,\r\n        dx: number, dy: number, dw: number, dh: number\r\n    ) {\r\n        const { MAGNIFY } = this.CONST;\r\n        if (this.L2C) {\r\n            this.L2C.drawImage(\r\n                marioImage,\r\n                sx, sy, sw, sh,\r\n                dx * MAGNIFY, dy * MAGNIFY,\r\n                dw * MAGNIFY, dh * MAGNIFY\r\n            );\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region mario state / animation functions\r\n\r\n    private _autoPlayIfDemanded(opts: any) {\r\n        let auto = opts['a'] || opts['auto'];\r\n        if (auto != undefined) {\r\n            auto = auto.toUpperCase();\r\n            if (auto == \"T\" || auto == \"TRUE\") {\r\n                const playBtn = document.getElementById(\"play\") as HTMLButtonElement;\r\n                if (playBtn) playBtn.dispatchEvent(new Event(\"click\"));\r\n            }\r\n        }\r\n    }\r\n\r\n    public doMarioEnter(timeStamp: number) {\r\n        this.TIMERS.bomb.checkAndFire(timeStamp);\r\n        this.drawScore(0, this.appState.curScore.notes, 0);\r\n        if (this.mario) {\r\n            this.mario.enter(timeStamp);\r\n\r\n            if (this.mario.x < 40) {\r\n                this.appState.animeId = window.requestAnimFrame(this.doMarioEnter);\r\n            } else {\r\n                this.mario.init4playing(timeStamp);\r\n                this.appState.gameStatus = GameStatus.Playing;\r\n                this.appState.animeId = window.requestAnimFrame(this.doMarioPlay);\r\n            }\r\n        }\r\n    }\r\n\r\n    public doMarioPlay(timeStamp: number) {\r\n        this.TIMERS.bomb.checkAndFire(timeStamp);\r\n        if (this.mario) {\r\n            this.mario.play(timeStamp);\r\n            if (this.appState.gameStatus == GameStatus.Playing) {\r\n                if (this.mario.pos - 2 != this.appState.curScore.end - 1) {\r\n                    this.appState.animeId = window.requestAnimFrame(this.doMarioPlay);\r\n                } else if (this.appState.curScore.loop) {\r\n                    this.appState.curPos = 0;\r\n                    this.mario.pos = 1;\r\n                    this.mario.x = 40;\r\n                    this.mario.init4playing(timeStamp);\r\n                    this.appState.animeId = window.requestAnimFrame(this.doMarioPlay);\r\n                } else {\r\n                    // Calls stopListener without a event arg\r\n                    const stopBtn = document.getElementById('stop') as SequencerButton;\r\n                    EmitClickEvent(stopBtn, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public doMarioLeave(timeStamp: number) {\r\n        this.TIMERS.bomb.checkAndFire(timeStamp);\r\n        if (this.mario) {\r\n            this.drawScore(this.appState.curPos, this.appState.curScore.notes, this.mario.scroll);\r\n            this.mario.leave(timeStamp);\r\n\r\n            if (this.mario.x < 247) {\r\n                window.requestAnimFrame(this.doMarioLeave);\r\n            } else {\r\n                this.appState.gameStatus = GameStatus.Edit;\r\n\r\n                [\"toLeft\", \"toRight\", \"scroll\", \"play\", \"clear\", \"frog\", \"beak\", \"1up\"].\r\n                    map(function (id) {\r\n                        (document.getElementById(id) as HTMLButtonElement).disabled = false;\r\n                    });\r\n\r\n                window.requestAnimFrame(this.doAnimation);\r\n            }\r\n        }\r\n    }\r\n\r\n    public doAnimation(time: number) {\r\n        if (!this.appState.resizing) {\r\n            this.TIMERS.bomb?.checkAndFire(time);\r\n            this.TIMERS.eraser?.checkAndFire(time);\r\n            this.TIMERS.endMark?.checkAndFire(time);\r\n\r\n            this.drawScore(this.appState.curPos, this.appState.curScore['notes'], 0);\r\n\r\n            if (this.appState.gameStatus != GameStatus.Edit) return;\r\n        }\r\n\r\n        window.requestAnimFrame(this.doAnimation);\r\n    }\r\n\r\n    public scheduleAndPlay(notes: (string | number)[], time: number) {\r\n        const { SOUNDS } = this.ASSETS;\r\n        if (time < 0) time = 0;\r\n        if (notes == undefined || notes.length == 0) return;\r\n        const dic: Record<number, number[]> = {};\r\n        for (let i = 0; i < notes.length; i++) {\r\n            const note = notes[i];\r\n\r\n            // Dynamic tempo change\r\n            if (typeof note == \"string\") {\r\n                const tempo = note.split(\"=\")[1];\r\n                this.appState.curScore.tempo = tempo;\r\n                const tempoEl = document.getElementById(\"tempo\") as HTMLInputElement;\r\n                if (tempoEl) tempoEl.value = tempo;\r\n                continue;\r\n            }\r\n\r\n            const num = note >> 8;\r\n            const scale = note & 0xFF;\r\n            if (!dic[num]) dic[num] = [scale];\r\n            else dic[num].push(scale);\r\n        }\r\n        for (let i in dic) {\r\n            SOUNDS[i].playChord(dic[i], time / 1000); // [ms] -> [s]\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region button image util functions\r\n\r\n    public resizeDOM(b: SequencerButton | SequencerSlider, w: number, h: number) {\r\n        const { MAGNIFY } = this.CONST;\r\n        b.style.width = w * MAGNIFY + \"px\";\r\n        b.style.height = h * MAGNIFY + \"px\";\r\n    }\r\n\r\n    public moveDOM(b: SequencerButton | SequencerSlider, x: number, y: number) {\r\n        const { MAGNIFY } = this.CONST;\r\n        b.style.left = x * MAGNIFY + \"px\";\r\n        b.style.top = y * MAGNIFY + \"px\";\r\n    }\r\n\r\n    private async _resizeScreen(magIdx: number) {\r\n        let { CHARSIZE, HALFCHARSIZE, MAGNIFY, ORGWIDTH, ORGHEIGHT, OFFSETLEFT, OFFSETTOP, SCRHEIGHT } = this.CONST;\r\n        this.appState.resizing = true;\r\n\r\n        const clearCanvas = () => {\r\n            if (this.L1C) {\r\n                this.L1C.clearRect(0, 0, ORGWIDTH * MAGNIFY, ORGHEIGHT * MAGNIFY);\r\n            }\r\n            if (this.L2C) {\r\n                this.L2C.clearRect(0, 0, ORGWIDTH * MAGNIFY, SCRHEIGHT * MAGNIFY);\r\n            }\r\n        };\r\n\r\n        let newMagnify = magIdx;\r\n        const scaledMagnify = Utils.getScaledMagnify();\r\n        if (magIdx > 3) {\r\n            newMagnify = scaledMagnify;\r\n        }\r\n        MAGNIFY = newMagnify;\r\n        CHARSIZE = 16 * MAGNIFY;\r\n        HALFCHARSIZE = Math.floor(CHARSIZE / 2);\r\n\r\n        this.container.style.width = ORGWIDTH * MAGNIFY + \"px\";\r\n        this.container.style.height = ORGHEIGHT * MAGNIFY + \"px\";\r\n        this.container.style.setProperty('--scaledMagnify', magIdx > 3 ? scaledMagnify.toString() : \"0\");\r\n        OFFSETLEFT = this.container.offsetLeft;\r\n        OFFSETTOP = this.container.offsetTop;\r\n\r\n        if (this.container) {\r\n            this.container.classList.remove(styles.mag1x, styles.mag2x, styles.mag3x);\r\n            switch (newMagnify) {\r\n                case 1:\r\n                    this.container.classList.add(styles.mag1x);\r\n                    break;\r\n                case 2:\r\n                    this.container.classList.add(styles.mag2x);\r\n                    break;\r\n                case 3:\r\n                    this.container.classList.add(styles.mag3x);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        clearCanvas();\r\n\r\n        this.CONST = {\r\n            ...this.CONST,\r\n            CHARSIZE,\r\n            HALFCHARSIZE,\r\n            MAGNIFY,\r\n            OFFSETLEFT,\r\n            OFFSETTOP\r\n        };\r\n\r\n        await new UI.Loader(this).init(true);\r\n        this.container.querySelectorAll('button.game, input[type=\"range\"]').forEach((element) => {\r\n            (element as SequencerButton | SequencerSlider).redraw();\r\n        });\r\n        this.ui.changeCursor(this.appState.currentTool);\r\n\r\n        this.appState.resizing = false;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region file handling \r\n\r\n    private _downloadJSON() {\r\n        const link = document.createElement(\"a\");\r\n        link.download = 'MSQ_Data.json';\r\n        const json = JSON.stringify(this.appState.curScore);\r\n        const blob = new Blob([json], { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(blob);\r\n        link.href = url;\r\n        link.click();\r\n    }\r\n\r\n    private _downloadMP3() {\r\n        const downloadOpts = document.querySelector('.downloadOpts') as HTMLDivElement;\r\n        downloadOpts.classList.remove(\"rendering\", \"dlReady\");\r\n        songToAudio(this).then((song) => {\r\n            const e = new Event(\"mp3update\") as Mp3UpdateEvent;\r\n            e.data = {\r\n                type: \"song\",\r\n                value: song\r\n            };\r\n            this.container.dispatchEvent(e);\r\n        });\r\n\r\n        // songToAudio(this.ASSETS.SOUNDS, Number(this.appState.curScore.tempo), this.appState.curScore);\r\n    }\r\n\r\n    private _onMp3Update(ev: Mp3UpdateEvent) {\r\n        const downloadOpts = document.querySelector('.downloadOpts') as HTMLDivElement;\r\n        const progressBar = document.querySelector('progress') as HTMLProgressElement;\r\n        switch (ev.data.type) {\r\n            case \"chordGenUpdate\":\r\n            case \"songProgressUpdate\":\r\n                if (!downloadOpts.classList.contains(\"rendering\"))\r\n                    downloadOpts.classList.add(\"rendering\");\r\n                progressBar.value = ev.data.value * 100;\r\n                break;\r\n            case \"song\":\r\n                if (!downloadOpts.classList.contains(\"dlReady\")) {\r\n                    downloadOpts.classList.remove(\"rendering\");\r\n                    downloadOpts.classList.add(\"dlReady\");\r\n                }\r\n                // Check if audio element with id 'export' exists\r\n                let audioEl = downloadOpts.querySelector('#export') as HTMLAudioElement;\r\n\r\n                if (!audioEl) {\r\n                    // If it doesn't exist, create a new one and append it to the body\r\n                    audioEl = document.createElement('audio');\r\n                    audioEl.id = 'export';\r\n                    audioEl.controls = true;\r\n                    downloadOpts.appendChild(audioEl);\r\n                }\r\n\r\n                // Set the src attribute to the blob URL\r\n                audioEl.src = ev.data.value;\r\n                break;\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    public setState(stateUpdate: Partial<MarioSequencerAppState>) {\r\n        this.updateHistory();\r\n        this.appState = Object.assign(this.appState, stateUpdate);\r\n    }\r\n}\r\n\r\nnew MarioSequencer('#app');"],"names":["leafPrototypes","getProto","inProgress","dataWebpackPrefix","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","m","getPrototypeOf","obj","t","value","mode","this","__esModule","then","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","d","definition","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","p","installedChunks","j","installedChunkData","promise","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","GameStatus","SoundEntity","constructor","app","settings","path","image","AC","buffer","prevChord","diff","play","scale","delay","source","createBufferSource","tmps","semitone","playbackRate","Math","pow","SEMITONERATIO","connect","destination","MSDestination","start","playChord","noteList","stop","load","filepath","XMLHttpRequest","open","responseType","decodeAudioData","response","send","SoundManager","sequencer","_sequencer","loadSounds","SOUNDS","ASSETS","tmp","toString","file","slice","CONST","frequency","func","images","_lastTime","switch","currentFrame","_frequency","_func","checkAndFire","time","Mario","sequencerInstance","offset","scroll","x","sweatImage","spriteImages","pos","state","isJumping","lastTime","IMAGES","Sweat","init","mario","timer","enter","timeStamp","floor","draw","init4leaving","init4playing","_checkMarioShouldJump","notes","appState","curScore","tempo","step","getElementById","nextBar","curPos","scheduleAndPlay","end","drawScore","_jump","round","y","drawMario","leave","w","width","h","height","drawMarioSweat","EmbeddedSongs","EmitClickEvent","b","soundOff","Event","dispatchEvent","Utils","boundFn","getConstants","opts","container","MAGNIFY","mag","magnify","getScaledMagnify","CHARSIZE","HALFCHARSIZE","style","DEFAULTMAXBARS","DEFAULTTEMPO","ORGHEIGHT","ORGWIDTH","SCRHEIGHT","OFFSETLEFT","offsetLeft","OFFSETTOP","offsetTop","window","innerWidth","innerHeight","min","createButton","args","className","clickHandler","position","moveDOM","resizeDOM","zIndex","background","originalX","originalY","originalW","originalH","setCurrentFrame","num","backgroundImage","redraw","addEventListener","classList","add","createChoiceGroupFunction","buttons","callbackFn","clone","splice","otherButtons","disabled","showSpriteFrame","btn","frameLength","getImageElFromPath","Image","sliceImage","img","result","charw","charh","tmpcan","tmpctx","getContext","imageSmoothingEnabled","drawImage","charimg","toDataURL","JSON","parse","stringify","UI","Loader","_onMouse","_onMouseMove","_sliceImage","_createButton","_createChoiceGroupFunction","reInit","_initLayers","_initImageAssets","_initBomb","_initInstrumentButtons","_initEndMarkButton","_initPlayButton","_initStopButton","_initLoopButton","_initScrollRange","_initBeatButtons","_initSongButtons","_initUndoDog","_initEraserButton","_initTempoRange","_initClearButton","initMusicScore","_initScreen","_initKeyboardEventListeners","_initMouseEvents","layer1","querySelector","layer2","Layer1","Layer2","L1C","L2C","bg","_loadSpritesheets","Chars","Bomb","End","PlayBtn","Repeat","Semitone","Numbers","Stop","Beat","Song","ThumbSlider","ClearBtn","UndoDog","SPRITESHEETS","skipLoading","ss","repeatMarks","Tools","GClef","StopBtn","BeatBtn","SongBtns","EndMarkBtn","EndMark","TIMERS","bomb","selectedSongBtn","gameStatus","Playing","ui","BUTTONS","bimgs","_getOrCreateButton","se","setState","currentTool","_clearEraserButton","changeCursor","_drawCurChar","endMark","drawEndMarkIcon","cursor","bubbles","imgs","loop","reset","set","max","curMaxBars","margin","parseInt","deltaY","valueAsNumber","cancelable","preventDefault","stopPropagation","b1","beats","b2","songButtons","idx","callbackFunc","tempoEl","scr","Edit","frame","previousState","history","pop","changeSongBtn","changeBeat","isSelected","eraser","drawEraserIcon","_clearSongButtons","setThumbImage","range","seqEl","setProperty","val","_reInitButtonsFromScore","tempoRange","substr","split","requestAnimFrame","doAnimation","_readDroppedFiles","SCREEN","beginPath","clearRect","fillRect","click","realX","clientX","realY","clientY","g","toGrid","gridX","gridY","updateHistory","allNotes","button","note","shiftKey","ctrlKey","mouseX","mouseY","resetScore","dataTransfer","files","sort","a","n1","n2","strip","n","exec","parseFloat","reader","FileReader","readAsText","chain","fp","fileReader","addMSQ","addJSON","catch","err","alert","console","keyPresses","filter","k","isShifting","canvasRecorder","save","playBtn","stopBtn","cancelAnimationFrame","animeId","doMarioEnter","gridLeft","gridTop","getChordBuffer","chords","nextChords","lengthInSecs","beatCount","totalBeats","sounds","reduceNotes","chordObj","cur","arr","nextNotes","restrictLength","instrumentNums","longestSound","buffers","instrumentBuffer","duration","context","OfflineAudioContext","ev","evt","semitoneRatio","instrumentNum","startRendering","convertFloat32ToInt16","int16Buffer","Int16Array","intVal","audioBufferToMp3","audioBuffer","mp3Encoder","Mp3Encoder","numberOfChannels","sampleRate","samples","getChannelData","sampleBlockSize","mp3Data","left","subarray","right","mp3Block","encodeBuffer","mp3Blob","Blob","CanvasRecorder","canvas","video_bits_per_sec","recordedBlobs","mediaRecorder","handleDataAvailable","handleStop","_app","_vbps","video","display","stream","captureStream","createMediaStreamDestination","types","MediaRecorder","isTypeSupported","supportedType","log","options","mimeType","videoBitsPerSecond","audioBitsPerSecond","mediaStream","MediaStream","addTrack","getVideoTracks","getAudioTracks","onstop","ondataavailable","controls","filename","blob","URL","createObjectURL","href","download","body","revokeObjectURL","size","superBuffer","requireAll","navigator","serviceWorker","register","registration","registrationError","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","containerSelector","AudioContext","webkitAudioContext","resizing","_urlOptions","_maxHistory","doMarioLeave","doMarioPlay","_downloadJSON","_downloadMP3","soundManager","containerEl","initialMagnify","_onMp3Update","location","search","selectedIndex","_resizeScreen","select","magIdx","downloadJSONBtn","downloadMP3Btn","backBtn","remove","checked","port","urlVal","protocol","hostname","pathname","bars","bar","tone","Array","setSelectionRange","clipboard","writeText","MarioEntering","MarioLeaving","AddEvents","spinner","_actionUrlParams","OPTS","status","statusText","_autoPlayIfDemanded","stack","S","SCORE","score","TEMPO","T","LOOP","L","END","E","TIME44","B","toUpperCase","text","tmpa","tempoInput","beatBtn","lines","keyword","values","line","kv","v","oldEnd","count","out","json","rect","clip","_drawHorizontalBar","_drawRepeatHead","orange","xorg","barnum","setLineDash","lineWidth","_drawBarNumber","strokeStyle","moveTo","lineTo","stroke","bounceDelta","hflag","bNote","sndnum","soundImage","x2","restore","nums","marioImage","sx","sy","sw","sh","dx","dy","dw","dh","auto","dic","top","newMagnify","scaledMagnify","clearCanvas","querySelectorAll","element","link","song","seconds","Number","singleBeatSeconds","suspend","onstatechange","currentTime","resume","oncomplete","beat","beatNotes","beatChords","noteValue","beatToInstrumentChords","beatBuffer","songBuffer","songToAudio","downloadOpts","progressBar","contains","audioEl","stateUpdate","assign"],"sourceRoot":""}